
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Biaya` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Biaya
 * 
 */
export type BiayaModel = runtime.Types.Result.DefaultSelection<Prisma.$BiayaPayload>

export type AggregateBiaya = {
  _count: BiayaCountAggregateOutputType | null
  _min: BiayaMinAggregateOutputType | null
  _max: BiayaMaxAggregateOutputType | null
}

export type BiayaMinAggregateOutputType = {
  id: string | null
  name: string | null
  dibuatTanggal: Date | null
}

export type BiayaMaxAggregateOutputType = {
  id: string | null
  name: string | null
  dibuatTanggal: Date | null
}

export type BiayaCountAggregateOutputType = {
  id: number
  name: number
  dibuatTanggal: number
  _all: number
}


export type BiayaMinAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
}

export type BiayaMaxAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
}

export type BiayaCountAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
  _all?: true
}

export type BiayaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Biaya to aggregate.
   */
  where?: Prisma.BiayaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Biayas to fetch.
   */
  orderBy?: Prisma.BiayaOrderByWithRelationInput | Prisma.BiayaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.BiayaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Biayas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Biayas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Biayas
  **/
  _count?: true | BiayaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: BiayaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: BiayaMaxAggregateInputType
}

export type GetBiayaAggregateType<T extends BiayaAggregateArgs> = {
      [P in keyof T & keyof AggregateBiaya]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateBiaya[P]>
    : Prisma.GetScalarType<T[P], AggregateBiaya[P]>
}




export type BiayaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BiayaWhereInput
  orderBy?: Prisma.BiayaOrderByWithAggregationInput | Prisma.BiayaOrderByWithAggregationInput[]
  by: Prisma.BiayaScalarFieldEnum[] | Prisma.BiayaScalarFieldEnum
  having?: Prisma.BiayaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: BiayaCountAggregateInputType | true
  _min?: BiayaMinAggregateInputType
  _max?: BiayaMaxAggregateInputType
}

export type BiayaGroupByOutputType = {
  id: string
  name: string
  dibuatTanggal: Date
  _count: BiayaCountAggregateOutputType | null
  _min: BiayaMinAggregateOutputType | null
  _max: BiayaMaxAggregateOutputType | null
}

type GetBiayaGroupByPayload<T extends BiayaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<BiayaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof BiayaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], BiayaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], BiayaGroupByOutputType[P]>
      }
    >
  >



export type BiayaWhereInput = {
  AND?: Prisma.BiayaWhereInput | Prisma.BiayaWhereInput[]
  OR?: Prisma.BiayaWhereInput[]
  NOT?: Prisma.BiayaWhereInput | Prisma.BiayaWhereInput[]
  id?: Prisma.StringFilter<"Biaya"> | string
  name?: Prisma.StringFilter<"Biaya"> | string
  dibuatTanggal?: Prisma.DateTimeFilter<"Biaya"> | Date | string
  daftarAgenda?: Prisma.AgendaListRelationFilter
}

export type BiayaOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  daftarAgenda?: Prisma.AgendaOrderByRelationAggregateInput
}

export type BiayaWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  name?: string
  AND?: Prisma.BiayaWhereInput | Prisma.BiayaWhereInput[]
  OR?: Prisma.BiayaWhereInput[]
  NOT?: Prisma.BiayaWhereInput | Prisma.BiayaWhereInput[]
  dibuatTanggal?: Prisma.DateTimeFilter<"Biaya"> | Date | string
  daftarAgenda?: Prisma.AgendaListRelationFilter
}, "id" | "name">

export type BiayaOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  _count?: Prisma.BiayaCountOrderByAggregateInput
  _max?: Prisma.BiayaMaxOrderByAggregateInput
  _min?: Prisma.BiayaMinOrderByAggregateInput
}

export type BiayaScalarWhereWithAggregatesInput = {
  AND?: Prisma.BiayaScalarWhereWithAggregatesInput | Prisma.BiayaScalarWhereWithAggregatesInput[]
  OR?: Prisma.BiayaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.BiayaScalarWhereWithAggregatesInput | Prisma.BiayaScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Biaya"> | string
  name?: Prisma.StringWithAggregatesFilter<"Biaya"> | string
  dibuatTanggal?: Prisma.DateTimeWithAggregatesFilter<"Biaya"> | Date | string
}

export type BiayaCreateInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
  daftarAgenda?: Prisma.AgendaCreateNestedManyWithoutBiayaInput
}

export type BiayaUncheckedCreateInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
  daftarAgenda?: Prisma.AgendaUncheckedCreateNestedManyWithoutBiayaInput
}

export type BiayaUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  daftarAgenda?: Prisma.AgendaUpdateManyWithoutBiayaNestedInput
}

export type BiayaUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  daftarAgenda?: Prisma.AgendaUncheckedUpdateManyWithoutBiayaNestedInput
}

export type BiayaCreateManyInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type BiayaUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BiayaUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BiayaNullableScalarRelationFilter = {
  is?: Prisma.BiayaWhereInput | null
  isNot?: Prisma.BiayaWhereInput | null
}

export type BiayaCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type BiayaMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type BiayaMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type BiayaCreateNestedOneWithoutDaftarAgendaInput = {
  create?: Prisma.XOR<Prisma.BiayaCreateWithoutDaftarAgendaInput, Prisma.BiayaUncheckedCreateWithoutDaftarAgendaInput>
  connectOrCreate?: Prisma.BiayaCreateOrConnectWithoutDaftarAgendaInput
  connect?: Prisma.BiayaWhereUniqueInput
}

export type BiayaUpdateOneWithoutDaftarAgendaNestedInput = {
  create?: Prisma.XOR<Prisma.BiayaCreateWithoutDaftarAgendaInput, Prisma.BiayaUncheckedCreateWithoutDaftarAgendaInput>
  connectOrCreate?: Prisma.BiayaCreateOrConnectWithoutDaftarAgendaInput
  upsert?: Prisma.BiayaUpsertWithoutDaftarAgendaInput
  disconnect?: Prisma.BiayaWhereInput | boolean
  delete?: Prisma.BiayaWhereInput | boolean
  connect?: Prisma.BiayaWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.BiayaUpdateToOneWithWhereWithoutDaftarAgendaInput, Prisma.BiayaUpdateWithoutDaftarAgendaInput>, Prisma.BiayaUncheckedUpdateWithoutDaftarAgendaInput>
}

export type BiayaCreateWithoutDaftarAgendaInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type BiayaUncheckedCreateWithoutDaftarAgendaInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type BiayaCreateOrConnectWithoutDaftarAgendaInput = {
  where: Prisma.BiayaWhereUniqueInput
  create: Prisma.XOR<Prisma.BiayaCreateWithoutDaftarAgendaInput, Prisma.BiayaUncheckedCreateWithoutDaftarAgendaInput>
}

export type BiayaUpsertWithoutDaftarAgendaInput = {
  update: Prisma.XOR<Prisma.BiayaUpdateWithoutDaftarAgendaInput, Prisma.BiayaUncheckedUpdateWithoutDaftarAgendaInput>
  create: Prisma.XOR<Prisma.BiayaCreateWithoutDaftarAgendaInput, Prisma.BiayaUncheckedCreateWithoutDaftarAgendaInput>
  where?: Prisma.BiayaWhereInput
}

export type BiayaUpdateToOneWithWhereWithoutDaftarAgendaInput = {
  where?: Prisma.BiayaWhereInput
  data: Prisma.XOR<Prisma.BiayaUpdateWithoutDaftarAgendaInput, Prisma.BiayaUncheckedUpdateWithoutDaftarAgendaInput>
}

export type BiayaUpdateWithoutDaftarAgendaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BiayaUncheckedUpdateWithoutDaftarAgendaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type BiayaCountOutputType
 */

export type BiayaCountOutputType = {
  daftarAgenda: number
}

export type BiayaCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  daftarAgenda?: boolean | BiayaCountOutputTypeCountDaftarAgendaArgs
}

/**
 * BiayaCountOutputType without action
 */
export type BiayaCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BiayaCountOutputType
   */
  select?: Prisma.BiayaCountOutputTypeSelect<ExtArgs> | null
}

/**
 * BiayaCountOutputType without action
 */
export type BiayaCountOutputTypeCountDaftarAgendaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AgendaWhereInput
}


export type BiayaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
  daftarAgenda?: boolean | Prisma.Biaya$daftarAgendaArgs<ExtArgs>
  _count?: boolean | Prisma.BiayaCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["biaya"]>

export type BiayaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}, ExtArgs["result"]["biaya"]>

export type BiayaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}, ExtArgs["result"]["biaya"]>

export type BiayaSelectScalar = {
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}

export type BiayaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "dibuatTanggal", ExtArgs["result"]["biaya"]>
export type BiayaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  daftarAgenda?: boolean | Prisma.Biaya$daftarAgendaArgs<ExtArgs>
  _count?: boolean | Prisma.BiayaCountOutputTypeDefaultArgs<ExtArgs>
}
export type BiayaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type BiayaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $BiayaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Biaya"
  objects: {
    daftarAgenda: Prisma.$AgendaPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    dibuatTanggal: Date
  }, ExtArgs["result"]["biaya"]>
  composites: {}
}

export type BiayaGetPayload<S extends boolean | null | undefined | BiayaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BiayaPayload, S>

export type BiayaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<BiayaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: BiayaCountAggregateInputType | true
  }

export interface BiayaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Biaya'], meta: { name: 'Biaya' } }
  /**
   * Find zero or one Biaya that matches the filter.
   * @param {BiayaFindUniqueArgs} args - Arguments to find a Biaya
   * @example
   * // Get one Biaya
   * const biaya = await prisma.biaya.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends BiayaFindUniqueArgs>(args: Prisma.SelectSubset<T, BiayaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Biaya that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {BiayaFindUniqueOrThrowArgs} args - Arguments to find a Biaya
   * @example
   * // Get one Biaya
   * const biaya = await prisma.biaya.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends BiayaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, BiayaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Biaya that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaFindFirstArgs} args - Arguments to find a Biaya
   * @example
   * // Get one Biaya
   * const biaya = await prisma.biaya.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends BiayaFindFirstArgs>(args?: Prisma.SelectSubset<T, BiayaFindFirstArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Biaya that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaFindFirstOrThrowArgs} args - Arguments to find a Biaya
   * @example
   * // Get one Biaya
   * const biaya = await prisma.biaya.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends BiayaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, BiayaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Biayas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Biayas
   * const biayas = await prisma.biaya.findMany()
   * 
   * // Get first 10 Biayas
   * const biayas = await prisma.biaya.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const biayaWithIdOnly = await prisma.biaya.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends BiayaFindManyArgs>(args?: Prisma.SelectSubset<T, BiayaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Biaya.
   * @param {BiayaCreateArgs} args - Arguments to create a Biaya.
   * @example
   * // Create one Biaya
   * const Biaya = await prisma.biaya.create({
   *   data: {
   *     // ... data to create a Biaya
   *   }
   * })
   * 
   */
  create<T extends BiayaCreateArgs>(args: Prisma.SelectSubset<T, BiayaCreateArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Biayas.
   * @param {BiayaCreateManyArgs} args - Arguments to create many Biayas.
   * @example
   * // Create many Biayas
   * const biaya = await prisma.biaya.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends BiayaCreateManyArgs>(args?: Prisma.SelectSubset<T, BiayaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Biayas and returns the data saved in the database.
   * @param {BiayaCreateManyAndReturnArgs} args - Arguments to create many Biayas.
   * @example
   * // Create many Biayas
   * const biaya = await prisma.biaya.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Biayas and only return the `id`
   * const biayaWithIdOnly = await prisma.biaya.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends BiayaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, BiayaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Biaya.
   * @param {BiayaDeleteArgs} args - Arguments to delete one Biaya.
   * @example
   * // Delete one Biaya
   * const Biaya = await prisma.biaya.delete({
   *   where: {
   *     // ... filter to delete one Biaya
   *   }
   * })
   * 
   */
  delete<T extends BiayaDeleteArgs>(args: Prisma.SelectSubset<T, BiayaDeleteArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Biaya.
   * @param {BiayaUpdateArgs} args - Arguments to update one Biaya.
   * @example
   * // Update one Biaya
   * const biaya = await prisma.biaya.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends BiayaUpdateArgs>(args: Prisma.SelectSubset<T, BiayaUpdateArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Biayas.
   * @param {BiayaDeleteManyArgs} args - Arguments to filter Biayas to delete.
   * @example
   * // Delete a few Biayas
   * const { count } = await prisma.biaya.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends BiayaDeleteManyArgs>(args?: Prisma.SelectSubset<T, BiayaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Biayas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Biayas
   * const biaya = await prisma.biaya.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends BiayaUpdateManyArgs>(args: Prisma.SelectSubset<T, BiayaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Biayas and returns the data updated in the database.
   * @param {BiayaUpdateManyAndReturnArgs} args - Arguments to update many Biayas.
   * @example
   * // Update many Biayas
   * const biaya = await prisma.biaya.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Biayas and only return the `id`
   * const biayaWithIdOnly = await prisma.biaya.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends BiayaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, BiayaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Biaya.
   * @param {BiayaUpsertArgs} args - Arguments to update or create a Biaya.
   * @example
   * // Update or create a Biaya
   * const biaya = await prisma.biaya.upsert({
   *   create: {
   *     // ... data to create a Biaya
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Biaya we want to update
   *   }
   * })
   */
  upsert<T extends BiayaUpsertArgs>(args: Prisma.SelectSubset<T, BiayaUpsertArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Biayas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaCountArgs} args - Arguments to filter Biayas to count.
   * @example
   * // Count the number of Biayas
   * const count = await prisma.biaya.count({
   *   where: {
   *     // ... the filter for the Biayas we want to count
   *   }
   * })
  **/
  count<T extends BiayaCountArgs>(
    args?: Prisma.Subset<T, BiayaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], BiayaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Biaya.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends BiayaAggregateArgs>(args: Prisma.Subset<T, BiayaAggregateArgs>): Prisma.PrismaPromise<GetBiayaAggregateType<T>>

  /**
   * Group by Biaya.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BiayaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends BiayaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: BiayaGroupByArgs['orderBy'] }
      : { orderBy?: BiayaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, BiayaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBiayaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Biaya model
 */
readonly fields: BiayaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Biaya.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__BiayaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  daftarAgenda<T extends Prisma.Biaya$daftarAgendaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Biaya$daftarAgendaArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Biaya model
 */
export interface BiayaFieldRefs {
  readonly id: Prisma.FieldRef<"Biaya", 'String'>
  readonly name: Prisma.FieldRef<"Biaya", 'String'>
  readonly dibuatTanggal: Prisma.FieldRef<"Biaya", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Biaya findUnique
 */
export type BiayaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * Filter, which Biaya to fetch.
   */
  where: Prisma.BiayaWhereUniqueInput
}

/**
 * Biaya findUniqueOrThrow
 */
export type BiayaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * Filter, which Biaya to fetch.
   */
  where: Prisma.BiayaWhereUniqueInput
}

/**
 * Biaya findFirst
 */
export type BiayaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * Filter, which Biaya to fetch.
   */
  where?: Prisma.BiayaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Biayas to fetch.
   */
  orderBy?: Prisma.BiayaOrderByWithRelationInput | Prisma.BiayaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Biayas.
   */
  cursor?: Prisma.BiayaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Biayas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Biayas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Biayas.
   */
  distinct?: Prisma.BiayaScalarFieldEnum | Prisma.BiayaScalarFieldEnum[]
}

/**
 * Biaya findFirstOrThrow
 */
export type BiayaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * Filter, which Biaya to fetch.
   */
  where?: Prisma.BiayaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Biayas to fetch.
   */
  orderBy?: Prisma.BiayaOrderByWithRelationInput | Prisma.BiayaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Biayas.
   */
  cursor?: Prisma.BiayaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Biayas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Biayas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Biayas.
   */
  distinct?: Prisma.BiayaScalarFieldEnum | Prisma.BiayaScalarFieldEnum[]
}

/**
 * Biaya findMany
 */
export type BiayaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * Filter, which Biayas to fetch.
   */
  where?: Prisma.BiayaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Biayas to fetch.
   */
  orderBy?: Prisma.BiayaOrderByWithRelationInput | Prisma.BiayaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Biayas.
   */
  cursor?: Prisma.BiayaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Biayas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Biayas.
   */
  skip?: number
  distinct?: Prisma.BiayaScalarFieldEnum | Prisma.BiayaScalarFieldEnum[]
}

/**
 * Biaya create
 */
export type BiayaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * The data needed to create a Biaya.
   */
  data: Prisma.XOR<Prisma.BiayaCreateInput, Prisma.BiayaUncheckedCreateInput>
}

/**
 * Biaya createMany
 */
export type BiayaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Biayas.
   */
  data: Prisma.BiayaCreateManyInput | Prisma.BiayaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Biaya createManyAndReturn
 */
export type BiayaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * The data used to create many Biayas.
   */
  data: Prisma.BiayaCreateManyInput | Prisma.BiayaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Biaya update
 */
export type BiayaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * The data needed to update a Biaya.
   */
  data: Prisma.XOR<Prisma.BiayaUpdateInput, Prisma.BiayaUncheckedUpdateInput>
  /**
   * Choose, which Biaya to update.
   */
  where: Prisma.BiayaWhereUniqueInput
}

/**
 * Biaya updateMany
 */
export type BiayaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Biayas.
   */
  data: Prisma.XOR<Prisma.BiayaUpdateManyMutationInput, Prisma.BiayaUncheckedUpdateManyInput>
  /**
   * Filter which Biayas to update
   */
  where?: Prisma.BiayaWhereInput
  /**
   * Limit how many Biayas to update.
   */
  limit?: number
}

/**
 * Biaya updateManyAndReturn
 */
export type BiayaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * The data used to update Biayas.
   */
  data: Prisma.XOR<Prisma.BiayaUpdateManyMutationInput, Prisma.BiayaUncheckedUpdateManyInput>
  /**
   * Filter which Biayas to update
   */
  where?: Prisma.BiayaWhereInput
  /**
   * Limit how many Biayas to update.
   */
  limit?: number
}

/**
 * Biaya upsert
 */
export type BiayaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * The filter to search for the Biaya to update in case it exists.
   */
  where: Prisma.BiayaWhereUniqueInput
  /**
   * In case the Biaya found by the `where` argument doesn't exist, create a new Biaya with this data.
   */
  create: Prisma.XOR<Prisma.BiayaCreateInput, Prisma.BiayaUncheckedCreateInput>
  /**
   * In case the Biaya was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.BiayaUpdateInput, Prisma.BiayaUncheckedUpdateInput>
}

/**
 * Biaya delete
 */
export type BiayaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  /**
   * Filter which Biaya to delete.
   */
  where: Prisma.BiayaWhereUniqueInput
}

/**
 * Biaya deleteMany
 */
export type BiayaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Biayas to delete
   */
  where?: Prisma.BiayaWhereInput
  /**
   * Limit how many Biayas to delete.
   */
  limit?: number
}

/**
 * Biaya.daftarAgenda
 */
export type Biaya$daftarAgendaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  where?: Prisma.AgendaWhereInput
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  cursor?: Prisma.AgendaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AgendaScalarFieldEnum | Prisma.AgendaScalarFieldEnum[]
}

/**
 * Biaya without action
 */
export type BiayaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
}
