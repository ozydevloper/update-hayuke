
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Agenda` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Agenda
 * 
 */
export type AgendaModel = runtime.Types.Result.DefaultSelection<Prisma.$AgendaPayload>

export type AggregateAgenda = {
  _count: AgendaCountAggregateOutputType | null
  _min: AgendaMinAggregateOutputType | null
  _max: AgendaMaxAggregateOutputType | null
}

export type AgendaMinAggregateOutputType = {
  id: string | null
  judul: string | null
  deskripsi: string | null
  tanggal: Date | null
  waktu: string | null
  kategoriId: string | null
  topikId: string | null
  kotaId: string | null
  kalanganId: string | null
  biayaId: string | null
  dibuatTanggal: Date | null
}

export type AgendaMaxAggregateOutputType = {
  id: string | null
  judul: string | null
  deskripsi: string | null
  tanggal: Date | null
  waktu: string | null
  kategoriId: string | null
  topikId: string | null
  kotaId: string | null
  kalanganId: string | null
  biayaId: string | null
  dibuatTanggal: Date | null
}

export type AgendaCountAggregateOutputType = {
  id: number
  poster: number
  judul: number
  deskripsi: number
  tanggal: number
  waktu: number
  pembicara: number
  penyelenggara: number
  kategoriId: number
  topikId: number
  kotaId: number
  kalanganId: number
  biayaId: number
  pelaksanaan: number
  dibuatTanggal: number
  _all: number
}


export type AgendaMinAggregateInputType = {
  id?: true
  judul?: true
  deskripsi?: true
  tanggal?: true
  waktu?: true
  kategoriId?: true
  topikId?: true
  kotaId?: true
  kalanganId?: true
  biayaId?: true
  dibuatTanggal?: true
}

export type AgendaMaxAggregateInputType = {
  id?: true
  judul?: true
  deskripsi?: true
  tanggal?: true
  waktu?: true
  kategoriId?: true
  topikId?: true
  kotaId?: true
  kalanganId?: true
  biayaId?: true
  dibuatTanggal?: true
}

export type AgendaCountAggregateInputType = {
  id?: true
  poster?: true
  judul?: true
  deskripsi?: true
  tanggal?: true
  waktu?: true
  pembicara?: true
  penyelenggara?: true
  kategoriId?: true
  topikId?: true
  kotaId?: true
  kalanganId?: true
  biayaId?: true
  pelaksanaan?: true
  dibuatTanggal?: true
  _all?: true
}

export type AgendaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Agenda to aggregate.
   */
  where?: Prisma.AgendaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Agenda to fetch.
   */
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AgendaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Agenda from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Agenda.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Agenda
  **/
  _count?: true | AgendaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AgendaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AgendaMaxAggregateInputType
}

export type GetAgendaAggregateType<T extends AgendaAggregateArgs> = {
      [P in keyof T & keyof AggregateAgenda]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAgenda[P]>
    : Prisma.GetScalarType<T[P], AggregateAgenda[P]>
}




export type AgendaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AgendaWhereInput
  orderBy?: Prisma.AgendaOrderByWithAggregationInput | Prisma.AgendaOrderByWithAggregationInput[]
  by: Prisma.AgendaScalarFieldEnum[] | Prisma.AgendaScalarFieldEnum
  having?: Prisma.AgendaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AgendaCountAggregateInputType | true
  _min?: AgendaMinAggregateInputType
  _max?: AgendaMaxAggregateInputType
}

export type AgendaGroupByOutputType = {
  id: string
  poster: string[]
  judul: string | null
  deskripsi: string | null
  tanggal: Date | null
  waktu: string | null
  pembicara: string[]
  penyelenggara: string[]
  kategoriId: string | null
  topikId: string | null
  kotaId: string | null
  kalanganId: string | null
  biayaId: string | null
  pelaksanaan: string[]
  dibuatTanggal: Date
  _count: AgendaCountAggregateOutputType | null
  _min: AgendaMinAggregateOutputType | null
  _max: AgendaMaxAggregateOutputType | null
}

type GetAgendaGroupByPayload<T extends AgendaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AgendaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AgendaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AgendaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AgendaGroupByOutputType[P]>
      }
    >
  >



export type AgendaWhereInput = {
  AND?: Prisma.AgendaWhereInput | Prisma.AgendaWhereInput[]
  OR?: Prisma.AgendaWhereInput[]
  NOT?: Prisma.AgendaWhereInput | Prisma.AgendaWhereInput[]
  id?: Prisma.StringFilter<"Agenda"> | string
  poster?: Prisma.StringNullableListFilter<"Agenda">
  judul?: Prisma.StringNullableFilter<"Agenda"> | string | null
  deskripsi?: Prisma.StringNullableFilter<"Agenda"> | string | null
  tanggal?: Prisma.DateTimeNullableFilter<"Agenda"> | Date | string | null
  waktu?: Prisma.StringNullableFilter<"Agenda"> | string | null
  pembicara?: Prisma.StringNullableListFilter<"Agenda">
  penyelenggara?: Prisma.StringNullableListFilter<"Agenda">
  kategoriId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  topikId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  kotaId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  kalanganId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  biayaId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  pelaksanaan?: Prisma.StringNullableListFilter<"Agenda">
  dibuatTanggal?: Prisma.DateTimeFilter<"Agenda"> | Date | string
  kategori?: Prisma.XOR<Prisma.KategoriNullableScalarRelationFilter, Prisma.KategoriWhereInput> | null
  topik?: Prisma.XOR<Prisma.TopikNullableScalarRelationFilter, Prisma.TopikWhereInput> | null
  kota?: Prisma.XOR<Prisma.KotaNullableScalarRelationFilter, Prisma.KotaWhereInput> | null
  kalangan?: Prisma.XOR<Prisma.KalanganNullableScalarRelationFilter, Prisma.KalanganWhereInput> | null
  biaya?: Prisma.XOR<Prisma.BiayaNullableScalarRelationFilter, Prisma.BiayaWhereInput> | null
}

export type AgendaOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  poster?: Prisma.SortOrder
  judul?: Prisma.SortOrderInput | Prisma.SortOrder
  deskripsi?: Prisma.SortOrderInput | Prisma.SortOrder
  tanggal?: Prisma.SortOrderInput | Prisma.SortOrder
  waktu?: Prisma.SortOrderInput | Prisma.SortOrder
  pembicara?: Prisma.SortOrder
  penyelenggara?: Prisma.SortOrder
  kategoriId?: Prisma.SortOrderInput | Prisma.SortOrder
  topikId?: Prisma.SortOrderInput | Prisma.SortOrder
  kotaId?: Prisma.SortOrderInput | Prisma.SortOrder
  kalanganId?: Prisma.SortOrderInput | Prisma.SortOrder
  biayaId?: Prisma.SortOrderInput | Prisma.SortOrder
  pelaksanaan?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  kategori?: Prisma.KategoriOrderByWithRelationInput
  topik?: Prisma.TopikOrderByWithRelationInput
  kota?: Prisma.KotaOrderByWithRelationInput
  kalangan?: Prisma.KalanganOrderByWithRelationInput
  biaya?: Prisma.BiayaOrderByWithRelationInput
}

export type AgendaWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.AgendaWhereInput | Prisma.AgendaWhereInput[]
  OR?: Prisma.AgendaWhereInput[]
  NOT?: Prisma.AgendaWhereInput | Prisma.AgendaWhereInput[]
  poster?: Prisma.StringNullableListFilter<"Agenda">
  judul?: Prisma.StringNullableFilter<"Agenda"> | string | null
  deskripsi?: Prisma.StringNullableFilter<"Agenda"> | string | null
  tanggal?: Prisma.DateTimeNullableFilter<"Agenda"> | Date | string | null
  waktu?: Prisma.StringNullableFilter<"Agenda"> | string | null
  pembicara?: Prisma.StringNullableListFilter<"Agenda">
  penyelenggara?: Prisma.StringNullableListFilter<"Agenda">
  kategoriId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  topikId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  kotaId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  kalanganId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  biayaId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  pelaksanaan?: Prisma.StringNullableListFilter<"Agenda">
  dibuatTanggal?: Prisma.DateTimeFilter<"Agenda"> | Date | string
  kategori?: Prisma.XOR<Prisma.KategoriNullableScalarRelationFilter, Prisma.KategoriWhereInput> | null
  topik?: Prisma.XOR<Prisma.TopikNullableScalarRelationFilter, Prisma.TopikWhereInput> | null
  kota?: Prisma.XOR<Prisma.KotaNullableScalarRelationFilter, Prisma.KotaWhereInput> | null
  kalangan?: Prisma.XOR<Prisma.KalanganNullableScalarRelationFilter, Prisma.KalanganWhereInput> | null
  biaya?: Prisma.XOR<Prisma.BiayaNullableScalarRelationFilter, Prisma.BiayaWhereInput> | null
}, "id">

export type AgendaOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  poster?: Prisma.SortOrder
  judul?: Prisma.SortOrderInput | Prisma.SortOrder
  deskripsi?: Prisma.SortOrderInput | Prisma.SortOrder
  tanggal?: Prisma.SortOrderInput | Prisma.SortOrder
  waktu?: Prisma.SortOrderInput | Prisma.SortOrder
  pembicara?: Prisma.SortOrder
  penyelenggara?: Prisma.SortOrder
  kategoriId?: Prisma.SortOrderInput | Prisma.SortOrder
  topikId?: Prisma.SortOrderInput | Prisma.SortOrder
  kotaId?: Prisma.SortOrderInput | Prisma.SortOrder
  kalanganId?: Prisma.SortOrderInput | Prisma.SortOrder
  biayaId?: Prisma.SortOrderInput | Prisma.SortOrder
  pelaksanaan?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  _count?: Prisma.AgendaCountOrderByAggregateInput
  _max?: Prisma.AgendaMaxOrderByAggregateInput
  _min?: Prisma.AgendaMinOrderByAggregateInput
}

export type AgendaScalarWhereWithAggregatesInput = {
  AND?: Prisma.AgendaScalarWhereWithAggregatesInput | Prisma.AgendaScalarWhereWithAggregatesInput[]
  OR?: Prisma.AgendaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AgendaScalarWhereWithAggregatesInput | Prisma.AgendaScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Agenda"> | string
  poster?: Prisma.StringNullableListFilter<"Agenda">
  judul?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  deskripsi?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  tanggal?: Prisma.DateTimeNullableWithAggregatesFilter<"Agenda"> | Date | string | null
  waktu?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  pembicara?: Prisma.StringNullableListFilter<"Agenda">
  penyelenggara?: Prisma.StringNullableListFilter<"Agenda">
  kategoriId?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  topikId?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  kotaId?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  kalanganId?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  biayaId?: Prisma.StringNullableWithAggregatesFilter<"Agenda"> | string | null
  pelaksanaan?: Prisma.StringNullableListFilter<"Agenda">
  dibuatTanggal?: Prisma.DateTimeWithAggregatesFilter<"Agenda"> | Date | string
}

export type AgendaCreateInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
  kategori?: Prisma.KategoriCreateNestedOneWithoutDaftarAgendaInput
  topik?: Prisma.TopikCreateNestedOneWithoutDaftarAgendaInput
  kota?: Prisma.KotaCreateNestedOneWithoutDaftarAgendaInput
  kalangan?: Prisma.KalanganCreateNestedOneWithoutDaftarAgendaInput
  biaya?: Prisma.BiayaCreateNestedOneWithoutDaftarAgendaInput
}

export type AgendaUncheckedCreateInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kategori?: Prisma.KategoriUpdateOneWithoutDaftarAgendaNestedInput
  topik?: Prisma.TopikUpdateOneWithoutDaftarAgendaNestedInput
  kota?: Prisma.KotaUpdateOneWithoutDaftarAgendaNestedInput
  kalangan?: Prisma.KalanganUpdateOneWithoutDaftarAgendaNestedInput
  biaya?: Prisma.BiayaUpdateOneWithoutDaftarAgendaNestedInput
}

export type AgendaUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaCreateManyInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StringNullableListFilter<$PrismaModel = never> = {
  equals?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null
  has?: string | Prisma.StringFieldRefInput<$PrismaModel> | null
  hasEvery?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  hasSome?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type AgendaCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  poster?: Prisma.SortOrder
  judul?: Prisma.SortOrder
  deskripsi?: Prisma.SortOrder
  tanggal?: Prisma.SortOrder
  waktu?: Prisma.SortOrder
  pembicara?: Prisma.SortOrder
  penyelenggara?: Prisma.SortOrder
  kategoriId?: Prisma.SortOrder
  topikId?: Prisma.SortOrder
  kotaId?: Prisma.SortOrder
  kalanganId?: Prisma.SortOrder
  biayaId?: Prisma.SortOrder
  pelaksanaan?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type AgendaMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  judul?: Prisma.SortOrder
  deskripsi?: Prisma.SortOrder
  tanggal?: Prisma.SortOrder
  waktu?: Prisma.SortOrder
  kategoriId?: Prisma.SortOrder
  topikId?: Prisma.SortOrder
  kotaId?: Prisma.SortOrder
  kalanganId?: Prisma.SortOrder
  biayaId?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type AgendaMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  judul?: Prisma.SortOrder
  deskripsi?: Prisma.SortOrder
  tanggal?: Prisma.SortOrder
  waktu?: Prisma.SortOrder
  kategoriId?: Prisma.SortOrder
  topikId?: Prisma.SortOrder
  kotaId?: Prisma.SortOrder
  kalanganId?: Prisma.SortOrder
  biayaId?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type AgendaListRelationFilter = {
  every?: Prisma.AgendaWhereInput
  some?: Prisma.AgendaWhereInput
  none?: Prisma.AgendaWhereInput
}

export type AgendaOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AgendaCreateposterInput = {
  set: string[]
}

export type AgendaCreatepembicaraInput = {
  set: string[]
}

export type AgendaCreatepenyelenggaraInput = {
  set: string[]
}

export type AgendaCreatepelaksanaanInput = {
  set: string[]
}

export type AgendaUpdateposterInput = {
  set?: string[]
  push?: string | string[]
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type AgendaUpdatepembicaraInput = {
  set?: string[]
  push?: string | string[]
}

export type AgendaUpdatepenyelenggaraInput = {
  set?: string[]
  push?: string | string[]
}

export type AgendaUpdatepelaksanaanInput = {
  set?: string[]
  push?: string | string[]
}

export type AgendaCreateNestedManyWithoutKategoriInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKategoriInput, Prisma.AgendaUncheckedCreateWithoutKategoriInput> | Prisma.AgendaCreateWithoutKategoriInput[] | Prisma.AgendaUncheckedCreateWithoutKategoriInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKategoriInput | Prisma.AgendaCreateOrConnectWithoutKategoriInput[]
  createMany?: Prisma.AgendaCreateManyKategoriInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUncheckedCreateNestedManyWithoutKategoriInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKategoriInput, Prisma.AgendaUncheckedCreateWithoutKategoriInput> | Prisma.AgendaCreateWithoutKategoriInput[] | Prisma.AgendaUncheckedCreateWithoutKategoriInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKategoriInput | Prisma.AgendaCreateOrConnectWithoutKategoriInput[]
  createMany?: Prisma.AgendaCreateManyKategoriInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUpdateManyWithoutKategoriNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKategoriInput, Prisma.AgendaUncheckedCreateWithoutKategoriInput> | Prisma.AgendaCreateWithoutKategoriInput[] | Prisma.AgendaUncheckedCreateWithoutKategoriInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKategoriInput | Prisma.AgendaCreateOrConnectWithoutKategoriInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutKategoriInput | Prisma.AgendaUpsertWithWhereUniqueWithoutKategoriInput[]
  createMany?: Prisma.AgendaCreateManyKategoriInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutKategoriInput | Prisma.AgendaUpdateWithWhereUniqueWithoutKategoriInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutKategoriInput | Prisma.AgendaUpdateManyWithWhereWithoutKategoriInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaUncheckedUpdateManyWithoutKategoriNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKategoriInput, Prisma.AgendaUncheckedCreateWithoutKategoriInput> | Prisma.AgendaCreateWithoutKategoriInput[] | Prisma.AgendaUncheckedCreateWithoutKategoriInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKategoriInput | Prisma.AgendaCreateOrConnectWithoutKategoriInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutKategoriInput | Prisma.AgendaUpsertWithWhereUniqueWithoutKategoriInput[]
  createMany?: Prisma.AgendaCreateManyKategoriInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutKategoriInput | Prisma.AgendaUpdateWithWhereUniqueWithoutKategoriInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutKategoriInput | Prisma.AgendaUpdateManyWithWhereWithoutKategoriInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaCreateNestedManyWithoutTopikInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutTopikInput, Prisma.AgendaUncheckedCreateWithoutTopikInput> | Prisma.AgendaCreateWithoutTopikInput[] | Prisma.AgendaUncheckedCreateWithoutTopikInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutTopikInput | Prisma.AgendaCreateOrConnectWithoutTopikInput[]
  createMany?: Prisma.AgendaCreateManyTopikInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUncheckedCreateNestedManyWithoutTopikInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutTopikInput, Prisma.AgendaUncheckedCreateWithoutTopikInput> | Prisma.AgendaCreateWithoutTopikInput[] | Prisma.AgendaUncheckedCreateWithoutTopikInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutTopikInput | Prisma.AgendaCreateOrConnectWithoutTopikInput[]
  createMany?: Prisma.AgendaCreateManyTopikInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUpdateManyWithoutTopikNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutTopikInput, Prisma.AgendaUncheckedCreateWithoutTopikInput> | Prisma.AgendaCreateWithoutTopikInput[] | Prisma.AgendaUncheckedCreateWithoutTopikInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutTopikInput | Prisma.AgendaCreateOrConnectWithoutTopikInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutTopikInput | Prisma.AgendaUpsertWithWhereUniqueWithoutTopikInput[]
  createMany?: Prisma.AgendaCreateManyTopikInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutTopikInput | Prisma.AgendaUpdateWithWhereUniqueWithoutTopikInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutTopikInput | Prisma.AgendaUpdateManyWithWhereWithoutTopikInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaUncheckedUpdateManyWithoutTopikNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutTopikInput, Prisma.AgendaUncheckedCreateWithoutTopikInput> | Prisma.AgendaCreateWithoutTopikInput[] | Prisma.AgendaUncheckedCreateWithoutTopikInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutTopikInput | Prisma.AgendaCreateOrConnectWithoutTopikInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutTopikInput | Prisma.AgendaUpsertWithWhereUniqueWithoutTopikInput[]
  createMany?: Prisma.AgendaCreateManyTopikInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutTopikInput | Prisma.AgendaUpdateWithWhereUniqueWithoutTopikInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutTopikInput | Prisma.AgendaUpdateManyWithWhereWithoutTopikInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaCreateNestedManyWithoutKotaInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKotaInput, Prisma.AgendaUncheckedCreateWithoutKotaInput> | Prisma.AgendaCreateWithoutKotaInput[] | Prisma.AgendaUncheckedCreateWithoutKotaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKotaInput | Prisma.AgendaCreateOrConnectWithoutKotaInput[]
  createMany?: Prisma.AgendaCreateManyKotaInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUncheckedCreateNestedManyWithoutKotaInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKotaInput, Prisma.AgendaUncheckedCreateWithoutKotaInput> | Prisma.AgendaCreateWithoutKotaInput[] | Prisma.AgendaUncheckedCreateWithoutKotaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKotaInput | Prisma.AgendaCreateOrConnectWithoutKotaInput[]
  createMany?: Prisma.AgendaCreateManyKotaInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUpdateManyWithoutKotaNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKotaInput, Prisma.AgendaUncheckedCreateWithoutKotaInput> | Prisma.AgendaCreateWithoutKotaInput[] | Prisma.AgendaUncheckedCreateWithoutKotaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKotaInput | Prisma.AgendaCreateOrConnectWithoutKotaInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutKotaInput | Prisma.AgendaUpsertWithWhereUniqueWithoutKotaInput[]
  createMany?: Prisma.AgendaCreateManyKotaInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutKotaInput | Prisma.AgendaUpdateWithWhereUniqueWithoutKotaInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutKotaInput | Prisma.AgendaUpdateManyWithWhereWithoutKotaInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaUncheckedUpdateManyWithoutKotaNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKotaInput, Prisma.AgendaUncheckedCreateWithoutKotaInput> | Prisma.AgendaCreateWithoutKotaInput[] | Prisma.AgendaUncheckedCreateWithoutKotaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKotaInput | Prisma.AgendaCreateOrConnectWithoutKotaInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutKotaInput | Prisma.AgendaUpsertWithWhereUniqueWithoutKotaInput[]
  createMany?: Prisma.AgendaCreateManyKotaInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutKotaInput | Prisma.AgendaUpdateWithWhereUniqueWithoutKotaInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutKotaInput | Prisma.AgendaUpdateManyWithWhereWithoutKotaInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaCreateNestedManyWithoutKalanganInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKalanganInput, Prisma.AgendaUncheckedCreateWithoutKalanganInput> | Prisma.AgendaCreateWithoutKalanganInput[] | Prisma.AgendaUncheckedCreateWithoutKalanganInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKalanganInput | Prisma.AgendaCreateOrConnectWithoutKalanganInput[]
  createMany?: Prisma.AgendaCreateManyKalanganInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUncheckedCreateNestedManyWithoutKalanganInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKalanganInput, Prisma.AgendaUncheckedCreateWithoutKalanganInput> | Prisma.AgendaCreateWithoutKalanganInput[] | Prisma.AgendaUncheckedCreateWithoutKalanganInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKalanganInput | Prisma.AgendaCreateOrConnectWithoutKalanganInput[]
  createMany?: Prisma.AgendaCreateManyKalanganInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUpdateManyWithoutKalanganNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKalanganInput, Prisma.AgendaUncheckedCreateWithoutKalanganInput> | Prisma.AgendaCreateWithoutKalanganInput[] | Prisma.AgendaUncheckedCreateWithoutKalanganInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKalanganInput | Prisma.AgendaCreateOrConnectWithoutKalanganInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutKalanganInput | Prisma.AgendaUpsertWithWhereUniqueWithoutKalanganInput[]
  createMany?: Prisma.AgendaCreateManyKalanganInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutKalanganInput | Prisma.AgendaUpdateWithWhereUniqueWithoutKalanganInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutKalanganInput | Prisma.AgendaUpdateManyWithWhereWithoutKalanganInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaUncheckedUpdateManyWithoutKalanganNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutKalanganInput, Prisma.AgendaUncheckedCreateWithoutKalanganInput> | Prisma.AgendaCreateWithoutKalanganInput[] | Prisma.AgendaUncheckedCreateWithoutKalanganInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutKalanganInput | Prisma.AgendaCreateOrConnectWithoutKalanganInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutKalanganInput | Prisma.AgendaUpsertWithWhereUniqueWithoutKalanganInput[]
  createMany?: Prisma.AgendaCreateManyKalanganInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutKalanganInput | Prisma.AgendaUpdateWithWhereUniqueWithoutKalanganInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutKalanganInput | Prisma.AgendaUpdateManyWithWhereWithoutKalanganInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaCreateNestedManyWithoutBiayaInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutBiayaInput, Prisma.AgendaUncheckedCreateWithoutBiayaInput> | Prisma.AgendaCreateWithoutBiayaInput[] | Prisma.AgendaUncheckedCreateWithoutBiayaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutBiayaInput | Prisma.AgendaCreateOrConnectWithoutBiayaInput[]
  createMany?: Prisma.AgendaCreateManyBiayaInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUncheckedCreateNestedManyWithoutBiayaInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutBiayaInput, Prisma.AgendaUncheckedCreateWithoutBiayaInput> | Prisma.AgendaCreateWithoutBiayaInput[] | Prisma.AgendaUncheckedCreateWithoutBiayaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutBiayaInput | Prisma.AgendaCreateOrConnectWithoutBiayaInput[]
  createMany?: Prisma.AgendaCreateManyBiayaInputEnvelope
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
}

export type AgendaUpdateManyWithoutBiayaNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutBiayaInput, Prisma.AgendaUncheckedCreateWithoutBiayaInput> | Prisma.AgendaCreateWithoutBiayaInput[] | Prisma.AgendaUncheckedCreateWithoutBiayaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutBiayaInput | Prisma.AgendaCreateOrConnectWithoutBiayaInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutBiayaInput | Prisma.AgendaUpsertWithWhereUniqueWithoutBiayaInput[]
  createMany?: Prisma.AgendaCreateManyBiayaInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutBiayaInput | Prisma.AgendaUpdateWithWhereUniqueWithoutBiayaInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutBiayaInput | Prisma.AgendaUpdateManyWithWhereWithoutBiayaInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaUncheckedUpdateManyWithoutBiayaNestedInput = {
  create?: Prisma.XOR<Prisma.AgendaCreateWithoutBiayaInput, Prisma.AgendaUncheckedCreateWithoutBiayaInput> | Prisma.AgendaCreateWithoutBiayaInput[] | Prisma.AgendaUncheckedCreateWithoutBiayaInput[]
  connectOrCreate?: Prisma.AgendaCreateOrConnectWithoutBiayaInput | Prisma.AgendaCreateOrConnectWithoutBiayaInput[]
  upsert?: Prisma.AgendaUpsertWithWhereUniqueWithoutBiayaInput | Prisma.AgendaUpsertWithWhereUniqueWithoutBiayaInput[]
  createMany?: Prisma.AgendaCreateManyBiayaInputEnvelope
  set?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  disconnect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  delete?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  connect?: Prisma.AgendaWhereUniqueInput | Prisma.AgendaWhereUniqueInput[]
  update?: Prisma.AgendaUpdateWithWhereUniqueWithoutBiayaInput | Prisma.AgendaUpdateWithWhereUniqueWithoutBiayaInput[]
  updateMany?: Prisma.AgendaUpdateManyWithWhereWithoutBiayaInput | Prisma.AgendaUpdateManyWithWhereWithoutBiayaInput[]
  deleteMany?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
}

export type AgendaCreateWithoutKategoriInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
  topik?: Prisma.TopikCreateNestedOneWithoutDaftarAgendaInput
  kota?: Prisma.KotaCreateNestedOneWithoutDaftarAgendaInput
  kalangan?: Prisma.KalanganCreateNestedOneWithoutDaftarAgendaInput
  biaya?: Prisma.BiayaCreateNestedOneWithoutDaftarAgendaInput
}

export type AgendaUncheckedCreateWithoutKategoriInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  topikId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaCreateOrConnectWithoutKategoriInput = {
  where: Prisma.AgendaWhereUniqueInput
  create: Prisma.XOR<Prisma.AgendaCreateWithoutKategoriInput, Prisma.AgendaUncheckedCreateWithoutKategoriInput>
}

export type AgendaCreateManyKategoriInputEnvelope = {
  data: Prisma.AgendaCreateManyKategoriInput | Prisma.AgendaCreateManyKategoriInput[]
  skipDuplicates?: boolean
}

export type AgendaUpsertWithWhereUniqueWithoutKategoriInput = {
  where: Prisma.AgendaWhereUniqueInput
  update: Prisma.XOR<Prisma.AgendaUpdateWithoutKategoriInput, Prisma.AgendaUncheckedUpdateWithoutKategoriInput>
  create: Prisma.XOR<Prisma.AgendaCreateWithoutKategoriInput, Prisma.AgendaUncheckedCreateWithoutKategoriInput>
}

export type AgendaUpdateWithWhereUniqueWithoutKategoriInput = {
  where: Prisma.AgendaWhereUniqueInput
  data: Prisma.XOR<Prisma.AgendaUpdateWithoutKategoriInput, Prisma.AgendaUncheckedUpdateWithoutKategoriInput>
}

export type AgendaUpdateManyWithWhereWithoutKategoriInput = {
  where: Prisma.AgendaScalarWhereInput
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyWithoutKategoriInput>
}

export type AgendaScalarWhereInput = {
  AND?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
  OR?: Prisma.AgendaScalarWhereInput[]
  NOT?: Prisma.AgendaScalarWhereInput | Prisma.AgendaScalarWhereInput[]
  id?: Prisma.StringFilter<"Agenda"> | string
  poster?: Prisma.StringNullableListFilter<"Agenda">
  judul?: Prisma.StringNullableFilter<"Agenda"> | string | null
  deskripsi?: Prisma.StringNullableFilter<"Agenda"> | string | null
  tanggal?: Prisma.DateTimeNullableFilter<"Agenda"> | Date | string | null
  waktu?: Prisma.StringNullableFilter<"Agenda"> | string | null
  pembicara?: Prisma.StringNullableListFilter<"Agenda">
  penyelenggara?: Prisma.StringNullableListFilter<"Agenda">
  kategoriId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  topikId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  kotaId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  kalanganId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  biayaId?: Prisma.StringNullableFilter<"Agenda"> | string | null
  pelaksanaan?: Prisma.StringNullableListFilter<"Agenda">
  dibuatTanggal?: Prisma.DateTimeFilter<"Agenda"> | Date | string
}

export type AgendaCreateWithoutTopikInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
  kategori?: Prisma.KategoriCreateNestedOneWithoutDaftarAgendaInput
  kota?: Prisma.KotaCreateNestedOneWithoutDaftarAgendaInput
  kalangan?: Prisma.KalanganCreateNestedOneWithoutDaftarAgendaInput
  biaya?: Prisma.BiayaCreateNestedOneWithoutDaftarAgendaInput
}

export type AgendaUncheckedCreateWithoutTopikInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaCreateOrConnectWithoutTopikInput = {
  where: Prisma.AgendaWhereUniqueInput
  create: Prisma.XOR<Prisma.AgendaCreateWithoutTopikInput, Prisma.AgendaUncheckedCreateWithoutTopikInput>
}

export type AgendaCreateManyTopikInputEnvelope = {
  data: Prisma.AgendaCreateManyTopikInput | Prisma.AgendaCreateManyTopikInput[]
  skipDuplicates?: boolean
}

export type AgendaUpsertWithWhereUniqueWithoutTopikInput = {
  where: Prisma.AgendaWhereUniqueInput
  update: Prisma.XOR<Prisma.AgendaUpdateWithoutTopikInput, Prisma.AgendaUncheckedUpdateWithoutTopikInput>
  create: Prisma.XOR<Prisma.AgendaCreateWithoutTopikInput, Prisma.AgendaUncheckedCreateWithoutTopikInput>
}

export type AgendaUpdateWithWhereUniqueWithoutTopikInput = {
  where: Prisma.AgendaWhereUniqueInput
  data: Prisma.XOR<Prisma.AgendaUpdateWithoutTopikInput, Prisma.AgendaUncheckedUpdateWithoutTopikInput>
}

export type AgendaUpdateManyWithWhereWithoutTopikInput = {
  where: Prisma.AgendaScalarWhereInput
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyWithoutTopikInput>
}

export type AgendaCreateWithoutKotaInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
  kategori?: Prisma.KategoriCreateNestedOneWithoutDaftarAgendaInput
  topik?: Prisma.TopikCreateNestedOneWithoutDaftarAgendaInput
  kalangan?: Prisma.KalanganCreateNestedOneWithoutDaftarAgendaInput
  biaya?: Prisma.BiayaCreateNestedOneWithoutDaftarAgendaInput
}

export type AgendaUncheckedCreateWithoutKotaInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaCreateOrConnectWithoutKotaInput = {
  where: Prisma.AgendaWhereUniqueInput
  create: Prisma.XOR<Prisma.AgendaCreateWithoutKotaInput, Prisma.AgendaUncheckedCreateWithoutKotaInput>
}

export type AgendaCreateManyKotaInputEnvelope = {
  data: Prisma.AgendaCreateManyKotaInput | Prisma.AgendaCreateManyKotaInput[]
  skipDuplicates?: boolean
}

export type AgendaUpsertWithWhereUniqueWithoutKotaInput = {
  where: Prisma.AgendaWhereUniqueInput
  update: Prisma.XOR<Prisma.AgendaUpdateWithoutKotaInput, Prisma.AgendaUncheckedUpdateWithoutKotaInput>
  create: Prisma.XOR<Prisma.AgendaCreateWithoutKotaInput, Prisma.AgendaUncheckedCreateWithoutKotaInput>
}

export type AgendaUpdateWithWhereUniqueWithoutKotaInput = {
  where: Prisma.AgendaWhereUniqueInput
  data: Prisma.XOR<Prisma.AgendaUpdateWithoutKotaInput, Prisma.AgendaUncheckedUpdateWithoutKotaInput>
}

export type AgendaUpdateManyWithWhereWithoutKotaInput = {
  where: Prisma.AgendaScalarWhereInput
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyWithoutKotaInput>
}

export type AgendaCreateWithoutKalanganInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
  kategori?: Prisma.KategoriCreateNestedOneWithoutDaftarAgendaInput
  topik?: Prisma.TopikCreateNestedOneWithoutDaftarAgendaInput
  kota?: Prisma.KotaCreateNestedOneWithoutDaftarAgendaInput
  biaya?: Prisma.BiayaCreateNestedOneWithoutDaftarAgendaInput
}

export type AgendaUncheckedCreateWithoutKalanganInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kotaId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaCreateOrConnectWithoutKalanganInput = {
  where: Prisma.AgendaWhereUniqueInput
  create: Prisma.XOR<Prisma.AgendaCreateWithoutKalanganInput, Prisma.AgendaUncheckedCreateWithoutKalanganInput>
}

export type AgendaCreateManyKalanganInputEnvelope = {
  data: Prisma.AgendaCreateManyKalanganInput | Prisma.AgendaCreateManyKalanganInput[]
  skipDuplicates?: boolean
}

export type AgendaUpsertWithWhereUniqueWithoutKalanganInput = {
  where: Prisma.AgendaWhereUniqueInput
  update: Prisma.XOR<Prisma.AgendaUpdateWithoutKalanganInput, Prisma.AgendaUncheckedUpdateWithoutKalanganInput>
  create: Prisma.XOR<Prisma.AgendaCreateWithoutKalanganInput, Prisma.AgendaUncheckedCreateWithoutKalanganInput>
}

export type AgendaUpdateWithWhereUniqueWithoutKalanganInput = {
  where: Prisma.AgendaWhereUniqueInput
  data: Prisma.XOR<Prisma.AgendaUpdateWithoutKalanganInput, Prisma.AgendaUncheckedUpdateWithoutKalanganInput>
}

export type AgendaUpdateManyWithWhereWithoutKalanganInput = {
  where: Prisma.AgendaScalarWhereInput
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyWithoutKalanganInput>
}

export type AgendaCreateWithoutBiayaInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
  kategori?: Prisma.KategoriCreateNestedOneWithoutDaftarAgendaInput
  topik?: Prisma.TopikCreateNestedOneWithoutDaftarAgendaInput
  kota?: Prisma.KotaCreateNestedOneWithoutDaftarAgendaInput
  kalangan?: Prisma.KalanganCreateNestedOneWithoutDaftarAgendaInput
}

export type AgendaUncheckedCreateWithoutBiayaInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaCreateOrConnectWithoutBiayaInput = {
  where: Prisma.AgendaWhereUniqueInput
  create: Prisma.XOR<Prisma.AgendaCreateWithoutBiayaInput, Prisma.AgendaUncheckedCreateWithoutBiayaInput>
}

export type AgendaCreateManyBiayaInputEnvelope = {
  data: Prisma.AgendaCreateManyBiayaInput | Prisma.AgendaCreateManyBiayaInput[]
  skipDuplicates?: boolean
}

export type AgendaUpsertWithWhereUniqueWithoutBiayaInput = {
  where: Prisma.AgendaWhereUniqueInput
  update: Prisma.XOR<Prisma.AgendaUpdateWithoutBiayaInput, Prisma.AgendaUncheckedUpdateWithoutBiayaInput>
  create: Prisma.XOR<Prisma.AgendaCreateWithoutBiayaInput, Prisma.AgendaUncheckedCreateWithoutBiayaInput>
}

export type AgendaUpdateWithWhereUniqueWithoutBiayaInput = {
  where: Prisma.AgendaWhereUniqueInput
  data: Prisma.XOR<Prisma.AgendaUpdateWithoutBiayaInput, Prisma.AgendaUncheckedUpdateWithoutBiayaInput>
}

export type AgendaUpdateManyWithWhereWithoutBiayaInput = {
  where: Prisma.AgendaScalarWhereInput
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyWithoutBiayaInput>
}

export type AgendaCreateManyKategoriInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  topikId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateWithoutKategoriInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  topik?: Prisma.TopikUpdateOneWithoutDaftarAgendaNestedInput
  kota?: Prisma.KotaUpdateOneWithoutDaftarAgendaNestedInput
  kalangan?: Prisma.KalanganUpdateOneWithoutDaftarAgendaNestedInput
  biaya?: Prisma.BiayaUpdateOneWithoutDaftarAgendaNestedInput
}

export type AgendaUncheckedUpdateWithoutKategoriInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaUncheckedUpdateManyWithoutKategoriInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaCreateManyTopikInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateWithoutTopikInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kategori?: Prisma.KategoriUpdateOneWithoutDaftarAgendaNestedInput
  kota?: Prisma.KotaUpdateOneWithoutDaftarAgendaNestedInput
  kalangan?: Prisma.KalanganUpdateOneWithoutDaftarAgendaNestedInput
  biaya?: Prisma.BiayaUpdateOneWithoutDaftarAgendaNestedInput
}

export type AgendaUncheckedUpdateWithoutTopikInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaUncheckedUpdateManyWithoutTopikInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaCreateManyKotaInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kalanganId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateWithoutKotaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kategori?: Prisma.KategoriUpdateOneWithoutDaftarAgendaNestedInput
  topik?: Prisma.TopikUpdateOneWithoutDaftarAgendaNestedInput
  kalangan?: Prisma.KalanganUpdateOneWithoutDaftarAgendaNestedInput
  biaya?: Prisma.BiayaUpdateOneWithoutDaftarAgendaNestedInput
}

export type AgendaUncheckedUpdateWithoutKotaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaUncheckedUpdateManyWithoutKotaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaCreateManyKalanganInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kotaId?: string | null
  biayaId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateWithoutKalanganInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kategori?: Prisma.KategoriUpdateOneWithoutDaftarAgendaNestedInput
  topik?: Prisma.TopikUpdateOneWithoutDaftarAgendaNestedInput
  kota?: Prisma.KotaUpdateOneWithoutDaftarAgendaNestedInput
  biaya?: Prisma.BiayaUpdateOneWithoutDaftarAgendaNestedInput
}

export type AgendaUncheckedUpdateWithoutKalanganInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaUncheckedUpdateManyWithoutKalanganInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  biayaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaCreateManyBiayaInput = {
  id?: string
  poster?: Prisma.AgendaCreateposterInput | string[]
  judul?: string | null
  deskripsi?: string | null
  tanggal?: Date | string | null
  waktu?: string | null
  pembicara?: Prisma.AgendaCreatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaCreatepenyelenggaraInput | string[]
  kategoriId?: string | null
  topikId?: string | null
  kotaId?: string | null
  kalanganId?: string | null
  pelaksanaan?: Prisma.AgendaCreatepelaksanaanInput | string[]
  dibuatTanggal?: Date | string
}

export type AgendaUpdateWithoutBiayaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kategori?: Prisma.KategoriUpdateOneWithoutDaftarAgendaNestedInput
  topik?: Prisma.TopikUpdateOneWithoutDaftarAgendaNestedInput
  kota?: Prisma.KotaUpdateOneWithoutDaftarAgendaNestedInput
  kalangan?: Prisma.KalanganUpdateOneWithoutDaftarAgendaNestedInput
}

export type AgendaUncheckedUpdateWithoutBiayaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AgendaUncheckedUpdateManyWithoutBiayaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  poster?: Prisma.AgendaUpdateposterInput | string[]
  judul?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deskripsi?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tanggal?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  waktu?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pembicara?: Prisma.AgendaUpdatepembicaraInput | string[]
  penyelenggara?: Prisma.AgendaUpdatepenyelenggaraInput | string[]
  kategoriId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  topikId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kotaId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  kalanganId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  pelaksanaan?: Prisma.AgendaUpdatepelaksanaanInput | string[]
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type AgendaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  poster?: boolean
  judul?: boolean
  deskripsi?: boolean
  tanggal?: boolean
  waktu?: boolean
  pembicara?: boolean
  penyelenggara?: boolean
  kategoriId?: boolean
  topikId?: boolean
  kotaId?: boolean
  kalanganId?: boolean
  biayaId?: boolean
  pelaksanaan?: boolean
  dibuatTanggal?: boolean
  kategori?: boolean | Prisma.Agenda$kategoriArgs<ExtArgs>
  topik?: boolean | Prisma.Agenda$topikArgs<ExtArgs>
  kota?: boolean | Prisma.Agenda$kotaArgs<ExtArgs>
  kalangan?: boolean | Prisma.Agenda$kalanganArgs<ExtArgs>
  biaya?: boolean | Prisma.Agenda$biayaArgs<ExtArgs>
}, ExtArgs["result"]["agenda"]>

export type AgendaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  poster?: boolean
  judul?: boolean
  deskripsi?: boolean
  tanggal?: boolean
  waktu?: boolean
  pembicara?: boolean
  penyelenggara?: boolean
  kategoriId?: boolean
  topikId?: boolean
  kotaId?: boolean
  kalanganId?: boolean
  biayaId?: boolean
  pelaksanaan?: boolean
  dibuatTanggal?: boolean
  kategori?: boolean | Prisma.Agenda$kategoriArgs<ExtArgs>
  topik?: boolean | Prisma.Agenda$topikArgs<ExtArgs>
  kota?: boolean | Prisma.Agenda$kotaArgs<ExtArgs>
  kalangan?: boolean | Prisma.Agenda$kalanganArgs<ExtArgs>
  biaya?: boolean | Prisma.Agenda$biayaArgs<ExtArgs>
}, ExtArgs["result"]["agenda"]>

export type AgendaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  poster?: boolean
  judul?: boolean
  deskripsi?: boolean
  tanggal?: boolean
  waktu?: boolean
  pembicara?: boolean
  penyelenggara?: boolean
  kategoriId?: boolean
  topikId?: boolean
  kotaId?: boolean
  kalanganId?: boolean
  biayaId?: boolean
  pelaksanaan?: boolean
  dibuatTanggal?: boolean
  kategori?: boolean | Prisma.Agenda$kategoriArgs<ExtArgs>
  topik?: boolean | Prisma.Agenda$topikArgs<ExtArgs>
  kota?: boolean | Prisma.Agenda$kotaArgs<ExtArgs>
  kalangan?: boolean | Prisma.Agenda$kalanganArgs<ExtArgs>
  biaya?: boolean | Prisma.Agenda$biayaArgs<ExtArgs>
}, ExtArgs["result"]["agenda"]>

export type AgendaSelectScalar = {
  id?: boolean
  poster?: boolean
  judul?: boolean
  deskripsi?: boolean
  tanggal?: boolean
  waktu?: boolean
  pembicara?: boolean
  penyelenggara?: boolean
  kategoriId?: boolean
  topikId?: boolean
  kotaId?: boolean
  kalanganId?: boolean
  biayaId?: boolean
  pelaksanaan?: boolean
  dibuatTanggal?: boolean
}

export type AgendaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "poster" | "judul" | "deskripsi" | "tanggal" | "waktu" | "pembicara" | "penyelenggara" | "kategoriId" | "topikId" | "kotaId" | "kalanganId" | "biayaId" | "pelaksanaan" | "dibuatTanggal", ExtArgs["result"]["agenda"]>
export type AgendaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  kategori?: boolean | Prisma.Agenda$kategoriArgs<ExtArgs>
  topik?: boolean | Prisma.Agenda$topikArgs<ExtArgs>
  kota?: boolean | Prisma.Agenda$kotaArgs<ExtArgs>
  kalangan?: boolean | Prisma.Agenda$kalanganArgs<ExtArgs>
  biaya?: boolean | Prisma.Agenda$biayaArgs<ExtArgs>
}
export type AgendaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  kategori?: boolean | Prisma.Agenda$kategoriArgs<ExtArgs>
  topik?: boolean | Prisma.Agenda$topikArgs<ExtArgs>
  kota?: boolean | Prisma.Agenda$kotaArgs<ExtArgs>
  kalangan?: boolean | Prisma.Agenda$kalanganArgs<ExtArgs>
  biaya?: boolean | Prisma.Agenda$biayaArgs<ExtArgs>
}
export type AgendaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  kategori?: boolean | Prisma.Agenda$kategoriArgs<ExtArgs>
  topik?: boolean | Prisma.Agenda$topikArgs<ExtArgs>
  kota?: boolean | Prisma.Agenda$kotaArgs<ExtArgs>
  kalangan?: boolean | Prisma.Agenda$kalanganArgs<ExtArgs>
  biaya?: boolean | Prisma.Agenda$biayaArgs<ExtArgs>
}

export type $AgendaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Agenda"
  objects: {
    kategori: Prisma.$KategoriPayload<ExtArgs> | null
    topik: Prisma.$TopikPayload<ExtArgs> | null
    kota: Prisma.$KotaPayload<ExtArgs> | null
    kalangan: Prisma.$KalanganPayload<ExtArgs> | null
    biaya: Prisma.$BiayaPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    poster: string[]
    judul: string | null
    deskripsi: string | null
    tanggal: Date | null
    waktu: string | null
    pembicara: string[]
    penyelenggara: string[]
    kategoriId: string | null
    topikId: string | null
    kotaId: string | null
    kalanganId: string | null
    biayaId: string | null
    pelaksanaan: string[]
    dibuatTanggal: Date
  }, ExtArgs["result"]["agenda"]>
  composites: {}
}

export type AgendaGetPayload<S extends boolean | null | undefined | AgendaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AgendaPayload, S>

export type AgendaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AgendaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AgendaCountAggregateInputType | true
  }

export interface AgendaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Agenda'], meta: { name: 'Agenda' } }
  /**
   * Find zero or one Agenda that matches the filter.
   * @param {AgendaFindUniqueArgs} args - Arguments to find a Agenda
   * @example
   * // Get one Agenda
   * const agenda = await prisma.agenda.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AgendaFindUniqueArgs>(args: Prisma.SelectSubset<T, AgendaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Agenda that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AgendaFindUniqueOrThrowArgs} args - Arguments to find a Agenda
   * @example
   * // Get one Agenda
   * const agenda = await prisma.agenda.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AgendaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AgendaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Agenda that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaFindFirstArgs} args - Arguments to find a Agenda
   * @example
   * // Get one Agenda
   * const agenda = await prisma.agenda.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AgendaFindFirstArgs>(args?: Prisma.SelectSubset<T, AgendaFindFirstArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Agenda that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaFindFirstOrThrowArgs} args - Arguments to find a Agenda
   * @example
   * // Get one Agenda
   * const agenda = await prisma.agenda.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AgendaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AgendaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Agenda that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Agenda
   * const agenda = await prisma.agenda.findMany()
   * 
   * // Get first 10 Agenda
   * const agenda = await prisma.agenda.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const agendaWithIdOnly = await prisma.agenda.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AgendaFindManyArgs>(args?: Prisma.SelectSubset<T, AgendaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Agenda.
   * @param {AgendaCreateArgs} args - Arguments to create a Agenda.
   * @example
   * // Create one Agenda
   * const Agenda = await prisma.agenda.create({
   *   data: {
   *     // ... data to create a Agenda
   *   }
   * })
   * 
   */
  create<T extends AgendaCreateArgs>(args: Prisma.SelectSubset<T, AgendaCreateArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Agenda.
   * @param {AgendaCreateManyArgs} args - Arguments to create many Agenda.
   * @example
   * // Create many Agenda
   * const agenda = await prisma.agenda.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AgendaCreateManyArgs>(args?: Prisma.SelectSubset<T, AgendaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Agenda and returns the data saved in the database.
   * @param {AgendaCreateManyAndReturnArgs} args - Arguments to create many Agenda.
   * @example
   * // Create many Agenda
   * const agenda = await prisma.agenda.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Agenda and only return the `id`
   * const agendaWithIdOnly = await prisma.agenda.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AgendaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AgendaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Agenda.
   * @param {AgendaDeleteArgs} args - Arguments to delete one Agenda.
   * @example
   * // Delete one Agenda
   * const Agenda = await prisma.agenda.delete({
   *   where: {
   *     // ... filter to delete one Agenda
   *   }
   * })
   * 
   */
  delete<T extends AgendaDeleteArgs>(args: Prisma.SelectSubset<T, AgendaDeleteArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Agenda.
   * @param {AgendaUpdateArgs} args - Arguments to update one Agenda.
   * @example
   * // Update one Agenda
   * const agenda = await prisma.agenda.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AgendaUpdateArgs>(args: Prisma.SelectSubset<T, AgendaUpdateArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Agenda.
   * @param {AgendaDeleteManyArgs} args - Arguments to filter Agenda to delete.
   * @example
   * // Delete a few Agenda
   * const { count } = await prisma.agenda.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AgendaDeleteManyArgs>(args?: Prisma.SelectSubset<T, AgendaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Agenda.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Agenda
   * const agenda = await prisma.agenda.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AgendaUpdateManyArgs>(args: Prisma.SelectSubset<T, AgendaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Agenda and returns the data updated in the database.
   * @param {AgendaUpdateManyAndReturnArgs} args - Arguments to update many Agenda.
   * @example
   * // Update many Agenda
   * const agenda = await prisma.agenda.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Agenda and only return the `id`
   * const agendaWithIdOnly = await prisma.agenda.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AgendaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AgendaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Agenda.
   * @param {AgendaUpsertArgs} args - Arguments to update or create a Agenda.
   * @example
   * // Update or create a Agenda
   * const agenda = await prisma.agenda.upsert({
   *   create: {
   *     // ... data to create a Agenda
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Agenda we want to update
   *   }
   * })
   */
  upsert<T extends AgendaUpsertArgs>(args: Prisma.SelectSubset<T, AgendaUpsertArgs<ExtArgs>>): Prisma.Prisma__AgendaClient<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Agenda.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaCountArgs} args - Arguments to filter Agenda to count.
   * @example
   * // Count the number of Agenda
   * const count = await prisma.agenda.count({
   *   where: {
   *     // ... the filter for the Agenda we want to count
   *   }
   * })
  **/
  count<T extends AgendaCountArgs>(
    args?: Prisma.Subset<T, AgendaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AgendaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Agenda.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AgendaAggregateArgs>(args: Prisma.Subset<T, AgendaAggregateArgs>): Prisma.PrismaPromise<GetAgendaAggregateType<T>>

  /**
   * Group by Agenda.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgendaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AgendaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AgendaGroupByArgs['orderBy'] }
      : { orderBy?: AgendaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AgendaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgendaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Agenda model
 */
readonly fields: AgendaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Agenda.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AgendaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  kategori<T extends Prisma.Agenda$kategoriArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Agenda$kategoriArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  topik<T extends Prisma.Agenda$topikArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Agenda$topikArgs<ExtArgs>>): Prisma.Prisma__TopikClient<runtime.Types.Result.GetResult<Prisma.$TopikPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  kota<T extends Prisma.Agenda$kotaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Agenda$kotaArgs<ExtArgs>>): Prisma.Prisma__KotaClient<runtime.Types.Result.GetResult<Prisma.$KotaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  kalangan<T extends Prisma.Agenda$kalanganArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Agenda$kalanganArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  biaya<T extends Prisma.Agenda$biayaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Agenda$biayaArgs<ExtArgs>>): Prisma.Prisma__BiayaClient<runtime.Types.Result.GetResult<Prisma.$BiayaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Agenda model
 */
export interface AgendaFieldRefs {
  readonly id: Prisma.FieldRef<"Agenda", 'String'>
  readonly poster: Prisma.FieldRef<"Agenda", 'String[]'>
  readonly judul: Prisma.FieldRef<"Agenda", 'String'>
  readonly deskripsi: Prisma.FieldRef<"Agenda", 'String'>
  readonly tanggal: Prisma.FieldRef<"Agenda", 'DateTime'>
  readonly waktu: Prisma.FieldRef<"Agenda", 'String'>
  readonly pembicara: Prisma.FieldRef<"Agenda", 'String[]'>
  readonly penyelenggara: Prisma.FieldRef<"Agenda", 'String[]'>
  readonly kategoriId: Prisma.FieldRef<"Agenda", 'String'>
  readonly topikId: Prisma.FieldRef<"Agenda", 'String'>
  readonly kotaId: Prisma.FieldRef<"Agenda", 'String'>
  readonly kalanganId: Prisma.FieldRef<"Agenda", 'String'>
  readonly biayaId: Prisma.FieldRef<"Agenda", 'String'>
  readonly pelaksanaan: Prisma.FieldRef<"Agenda", 'String[]'>
  readonly dibuatTanggal: Prisma.FieldRef<"Agenda", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Agenda findUnique
 */
export type AgendaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * Filter, which Agenda to fetch.
   */
  where: Prisma.AgendaWhereUniqueInput
}

/**
 * Agenda findUniqueOrThrow
 */
export type AgendaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * Filter, which Agenda to fetch.
   */
  where: Prisma.AgendaWhereUniqueInput
}

/**
 * Agenda findFirst
 */
export type AgendaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * Filter, which Agenda to fetch.
   */
  where?: Prisma.AgendaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Agenda to fetch.
   */
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Agenda.
   */
  cursor?: Prisma.AgendaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Agenda from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Agenda.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Agenda.
   */
  distinct?: Prisma.AgendaScalarFieldEnum | Prisma.AgendaScalarFieldEnum[]
}

/**
 * Agenda findFirstOrThrow
 */
export type AgendaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * Filter, which Agenda to fetch.
   */
  where?: Prisma.AgendaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Agenda to fetch.
   */
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Agenda.
   */
  cursor?: Prisma.AgendaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Agenda from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Agenda.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Agenda.
   */
  distinct?: Prisma.AgendaScalarFieldEnum | Prisma.AgendaScalarFieldEnum[]
}

/**
 * Agenda findMany
 */
export type AgendaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * Filter, which Agenda to fetch.
   */
  where?: Prisma.AgendaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Agenda to fetch.
   */
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Agenda.
   */
  cursor?: Prisma.AgendaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Agenda from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Agenda.
   */
  skip?: number
  distinct?: Prisma.AgendaScalarFieldEnum | Prisma.AgendaScalarFieldEnum[]
}

/**
 * Agenda create
 */
export type AgendaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * The data needed to create a Agenda.
   */
  data?: Prisma.XOR<Prisma.AgendaCreateInput, Prisma.AgendaUncheckedCreateInput>
}

/**
 * Agenda createMany
 */
export type AgendaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Agenda.
   */
  data: Prisma.AgendaCreateManyInput | Prisma.AgendaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Agenda createManyAndReturn
 */
export type AgendaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * The data used to create many Agenda.
   */
  data: Prisma.AgendaCreateManyInput | Prisma.AgendaCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Agenda update
 */
export type AgendaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * The data needed to update a Agenda.
   */
  data: Prisma.XOR<Prisma.AgendaUpdateInput, Prisma.AgendaUncheckedUpdateInput>
  /**
   * Choose, which Agenda to update.
   */
  where: Prisma.AgendaWhereUniqueInput
}

/**
 * Agenda updateMany
 */
export type AgendaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Agenda.
   */
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyInput>
  /**
   * Filter which Agenda to update
   */
  where?: Prisma.AgendaWhereInput
  /**
   * Limit how many Agenda to update.
   */
  limit?: number
}

/**
 * Agenda updateManyAndReturn
 */
export type AgendaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * The data used to update Agenda.
   */
  data: Prisma.XOR<Prisma.AgendaUpdateManyMutationInput, Prisma.AgendaUncheckedUpdateManyInput>
  /**
   * Filter which Agenda to update
   */
  where?: Prisma.AgendaWhereInput
  /**
   * Limit how many Agenda to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Agenda upsert
 */
export type AgendaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * The filter to search for the Agenda to update in case it exists.
   */
  where: Prisma.AgendaWhereUniqueInput
  /**
   * In case the Agenda found by the `where` argument doesn't exist, create a new Agenda with this data.
   */
  create: Prisma.XOR<Prisma.AgendaCreateInput, Prisma.AgendaUncheckedCreateInput>
  /**
   * In case the Agenda was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AgendaUpdateInput, Prisma.AgendaUncheckedUpdateInput>
}

/**
 * Agenda delete
 */
export type AgendaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  /**
   * Filter which Agenda to delete.
   */
  where: Prisma.AgendaWhereUniqueInput
}

/**
 * Agenda deleteMany
 */
export type AgendaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Agenda to delete
   */
  where?: Prisma.AgendaWhereInput
  /**
   * Limit how many Agenda to delete.
   */
  limit?: number
}

/**
 * Agenda.kategori
 */
export type Agenda$kategoriArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  where?: Prisma.KategoriWhereInput
}

/**
 * Agenda.topik
 */
export type Agenda$topikArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Topik
   */
  select?: Prisma.TopikSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Topik
   */
  omit?: Prisma.TopikOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TopikInclude<ExtArgs> | null
  where?: Prisma.TopikWhereInput
}

/**
 * Agenda.kota
 */
export type Agenda$kotaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kota
   */
  select?: Prisma.KotaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kota
   */
  omit?: Prisma.KotaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KotaInclude<ExtArgs> | null
  where?: Prisma.KotaWhereInput
}

/**
 * Agenda.kalangan
 */
export type Agenda$kalanganArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  where?: Prisma.KalanganWhereInput
}

/**
 * Agenda.biaya
 */
export type Agenda$biayaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Biaya
   */
  select?: Prisma.BiayaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Biaya
   */
  omit?: Prisma.BiayaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BiayaInclude<ExtArgs> | null
  where?: Prisma.BiayaWhereInput
}

/**
 * Agenda without action
 */
export type AgendaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
}
