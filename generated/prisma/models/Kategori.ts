
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Kategori` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Kategori
 * 
 */
export type KategoriModel = runtime.Types.Result.DefaultSelection<Prisma.$KategoriPayload>

export type AggregateKategori = {
  _count: KategoriCountAggregateOutputType | null
  _min: KategoriMinAggregateOutputType | null
  _max: KategoriMaxAggregateOutputType | null
}

export type KategoriMinAggregateOutputType = {
  id: string | null
  name: string | null
  dibuatTanggal: Date | null
}

export type KategoriMaxAggregateOutputType = {
  id: string | null
  name: string | null
  dibuatTanggal: Date | null
}

export type KategoriCountAggregateOutputType = {
  id: number
  name: number
  dibuatTanggal: number
  _all: number
}


export type KategoriMinAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
}

export type KategoriMaxAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
}

export type KategoriCountAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
  _all?: true
}

export type KategoriAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Kategori to aggregate.
   */
  where?: Prisma.KategoriWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kategoris to fetch.
   */
  orderBy?: Prisma.KategoriOrderByWithRelationInput | Prisma.KategoriOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.KategoriWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kategoris from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kategoris.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Kategoris
  **/
  _count?: true | KategoriCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: KategoriMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: KategoriMaxAggregateInputType
}

export type GetKategoriAggregateType<T extends KategoriAggregateArgs> = {
      [P in keyof T & keyof AggregateKategori]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateKategori[P]>
    : Prisma.GetScalarType<T[P], AggregateKategori[P]>
}




export type KategoriGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.KategoriWhereInput
  orderBy?: Prisma.KategoriOrderByWithAggregationInput | Prisma.KategoriOrderByWithAggregationInput[]
  by: Prisma.KategoriScalarFieldEnum[] | Prisma.KategoriScalarFieldEnum
  having?: Prisma.KategoriScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: KategoriCountAggregateInputType | true
  _min?: KategoriMinAggregateInputType
  _max?: KategoriMaxAggregateInputType
}

export type KategoriGroupByOutputType = {
  id: string
  name: string
  dibuatTanggal: Date
  _count: KategoriCountAggregateOutputType | null
  _min: KategoriMinAggregateOutputType | null
  _max: KategoriMaxAggregateOutputType | null
}

type GetKategoriGroupByPayload<T extends KategoriGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<KategoriGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof KategoriGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], KategoriGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], KategoriGroupByOutputType[P]>
      }
    >
  >



export type KategoriWhereInput = {
  AND?: Prisma.KategoriWhereInput | Prisma.KategoriWhereInput[]
  OR?: Prisma.KategoriWhereInput[]
  NOT?: Prisma.KategoriWhereInput | Prisma.KategoriWhereInput[]
  id?: Prisma.StringFilter<"Kategori"> | string
  name?: Prisma.StringFilter<"Kategori"> | string
  dibuatTanggal?: Prisma.DateTimeFilter<"Kategori"> | Date | string
  daftarAgenda?: Prisma.AgendaListRelationFilter
}

export type KategoriOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  daftarAgenda?: Prisma.AgendaOrderByRelationAggregateInput
}

export type KategoriWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  name?: string
  AND?: Prisma.KategoriWhereInput | Prisma.KategoriWhereInput[]
  OR?: Prisma.KategoriWhereInput[]
  NOT?: Prisma.KategoriWhereInput | Prisma.KategoriWhereInput[]
  dibuatTanggal?: Prisma.DateTimeFilter<"Kategori"> | Date | string
  daftarAgenda?: Prisma.AgendaListRelationFilter
}, "id" | "name">

export type KategoriOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  _count?: Prisma.KategoriCountOrderByAggregateInput
  _max?: Prisma.KategoriMaxOrderByAggregateInput
  _min?: Prisma.KategoriMinOrderByAggregateInput
}

export type KategoriScalarWhereWithAggregatesInput = {
  AND?: Prisma.KategoriScalarWhereWithAggregatesInput | Prisma.KategoriScalarWhereWithAggregatesInput[]
  OR?: Prisma.KategoriScalarWhereWithAggregatesInput[]
  NOT?: Prisma.KategoriScalarWhereWithAggregatesInput | Prisma.KategoriScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Kategori"> | string
  name?: Prisma.StringWithAggregatesFilter<"Kategori"> | string
  dibuatTanggal?: Prisma.DateTimeWithAggregatesFilter<"Kategori"> | Date | string
}

export type KategoriCreateInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
  daftarAgenda?: Prisma.AgendaCreateNestedManyWithoutKategoriInput
}

export type KategoriUncheckedCreateInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
  daftarAgenda?: Prisma.AgendaUncheckedCreateNestedManyWithoutKategoriInput
}

export type KategoriUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  daftarAgenda?: Prisma.AgendaUpdateManyWithoutKategoriNestedInput
}

export type KategoriUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  daftarAgenda?: Prisma.AgendaUncheckedUpdateManyWithoutKategoriNestedInput
}

export type KategoriCreateManyInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type KategoriUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type KategoriUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type KategoriNullableScalarRelationFilter = {
  is?: Prisma.KategoriWhereInput | null
  isNot?: Prisma.KategoriWhereInput | null
}

export type KategoriCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type KategoriMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type KategoriMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type KategoriCreateNestedOneWithoutDaftarAgendaInput = {
  create?: Prisma.XOR<Prisma.KategoriCreateWithoutDaftarAgendaInput, Prisma.KategoriUncheckedCreateWithoutDaftarAgendaInput>
  connectOrCreate?: Prisma.KategoriCreateOrConnectWithoutDaftarAgendaInput
  connect?: Prisma.KategoriWhereUniqueInput
}

export type KategoriUpdateOneWithoutDaftarAgendaNestedInput = {
  create?: Prisma.XOR<Prisma.KategoriCreateWithoutDaftarAgendaInput, Prisma.KategoriUncheckedCreateWithoutDaftarAgendaInput>
  connectOrCreate?: Prisma.KategoriCreateOrConnectWithoutDaftarAgendaInput
  upsert?: Prisma.KategoriUpsertWithoutDaftarAgendaInput
  disconnect?: Prisma.KategoriWhereInput | boolean
  delete?: Prisma.KategoriWhereInput | boolean
  connect?: Prisma.KategoriWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.KategoriUpdateToOneWithWhereWithoutDaftarAgendaInput, Prisma.KategoriUpdateWithoutDaftarAgendaInput>, Prisma.KategoriUncheckedUpdateWithoutDaftarAgendaInput>
}

export type KategoriCreateWithoutDaftarAgendaInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type KategoriUncheckedCreateWithoutDaftarAgendaInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type KategoriCreateOrConnectWithoutDaftarAgendaInput = {
  where: Prisma.KategoriWhereUniqueInput
  create: Prisma.XOR<Prisma.KategoriCreateWithoutDaftarAgendaInput, Prisma.KategoriUncheckedCreateWithoutDaftarAgendaInput>
}

export type KategoriUpsertWithoutDaftarAgendaInput = {
  update: Prisma.XOR<Prisma.KategoriUpdateWithoutDaftarAgendaInput, Prisma.KategoriUncheckedUpdateWithoutDaftarAgendaInput>
  create: Prisma.XOR<Prisma.KategoriCreateWithoutDaftarAgendaInput, Prisma.KategoriUncheckedCreateWithoutDaftarAgendaInput>
  where?: Prisma.KategoriWhereInput
}

export type KategoriUpdateToOneWithWhereWithoutDaftarAgendaInput = {
  where?: Prisma.KategoriWhereInput
  data: Prisma.XOR<Prisma.KategoriUpdateWithoutDaftarAgendaInput, Prisma.KategoriUncheckedUpdateWithoutDaftarAgendaInput>
}

export type KategoriUpdateWithoutDaftarAgendaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type KategoriUncheckedUpdateWithoutDaftarAgendaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type KategoriCountOutputType
 */

export type KategoriCountOutputType = {
  daftarAgenda: number
}

export type KategoriCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  daftarAgenda?: boolean | KategoriCountOutputTypeCountDaftarAgendaArgs
}

/**
 * KategoriCountOutputType without action
 */
export type KategoriCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the KategoriCountOutputType
   */
  select?: Prisma.KategoriCountOutputTypeSelect<ExtArgs> | null
}

/**
 * KategoriCountOutputType without action
 */
export type KategoriCountOutputTypeCountDaftarAgendaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AgendaWhereInput
}


export type KategoriSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
  daftarAgenda?: boolean | Prisma.Kategori$daftarAgendaArgs<ExtArgs>
  _count?: boolean | Prisma.KategoriCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["kategori"]>

export type KategoriSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}, ExtArgs["result"]["kategori"]>

export type KategoriSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}, ExtArgs["result"]["kategori"]>

export type KategoriSelectScalar = {
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}

export type KategoriOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "dibuatTanggal", ExtArgs["result"]["kategori"]>
export type KategoriInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  daftarAgenda?: boolean | Prisma.Kategori$daftarAgendaArgs<ExtArgs>
  _count?: boolean | Prisma.KategoriCountOutputTypeDefaultArgs<ExtArgs>
}
export type KategoriIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type KategoriIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $KategoriPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Kategori"
  objects: {
    daftarAgenda: Prisma.$AgendaPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    dibuatTanggal: Date
  }, ExtArgs["result"]["kategori"]>
  composites: {}
}

export type KategoriGetPayload<S extends boolean | null | undefined | KategoriDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$KategoriPayload, S>

export type KategoriCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<KategoriFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: KategoriCountAggregateInputType | true
  }

export interface KategoriDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kategori'], meta: { name: 'Kategori' } }
  /**
   * Find zero or one Kategori that matches the filter.
   * @param {KategoriFindUniqueArgs} args - Arguments to find a Kategori
   * @example
   * // Get one Kategori
   * const kategori = await prisma.kategori.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends KategoriFindUniqueArgs>(args: Prisma.SelectSubset<T, KategoriFindUniqueArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Kategori that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {KategoriFindUniqueOrThrowArgs} args - Arguments to find a Kategori
   * @example
   * // Get one Kategori
   * const kategori = await prisma.kategori.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends KategoriFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, KategoriFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Kategori that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriFindFirstArgs} args - Arguments to find a Kategori
   * @example
   * // Get one Kategori
   * const kategori = await prisma.kategori.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends KategoriFindFirstArgs>(args?: Prisma.SelectSubset<T, KategoriFindFirstArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Kategori that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriFindFirstOrThrowArgs} args - Arguments to find a Kategori
   * @example
   * // Get one Kategori
   * const kategori = await prisma.kategori.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends KategoriFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, KategoriFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Kategoris that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Kategoris
   * const kategoris = await prisma.kategori.findMany()
   * 
   * // Get first 10 Kategoris
   * const kategoris = await prisma.kategori.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const kategoriWithIdOnly = await prisma.kategori.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends KategoriFindManyArgs>(args?: Prisma.SelectSubset<T, KategoriFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Kategori.
   * @param {KategoriCreateArgs} args - Arguments to create a Kategori.
   * @example
   * // Create one Kategori
   * const Kategori = await prisma.kategori.create({
   *   data: {
   *     // ... data to create a Kategori
   *   }
   * })
   * 
   */
  create<T extends KategoriCreateArgs>(args: Prisma.SelectSubset<T, KategoriCreateArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Kategoris.
   * @param {KategoriCreateManyArgs} args - Arguments to create many Kategoris.
   * @example
   * // Create many Kategoris
   * const kategori = await prisma.kategori.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends KategoriCreateManyArgs>(args?: Prisma.SelectSubset<T, KategoriCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Kategoris and returns the data saved in the database.
   * @param {KategoriCreateManyAndReturnArgs} args - Arguments to create many Kategoris.
   * @example
   * // Create many Kategoris
   * const kategori = await prisma.kategori.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Kategoris and only return the `id`
   * const kategoriWithIdOnly = await prisma.kategori.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends KategoriCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, KategoriCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Kategori.
   * @param {KategoriDeleteArgs} args - Arguments to delete one Kategori.
   * @example
   * // Delete one Kategori
   * const Kategori = await prisma.kategori.delete({
   *   where: {
   *     // ... filter to delete one Kategori
   *   }
   * })
   * 
   */
  delete<T extends KategoriDeleteArgs>(args: Prisma.SelectSubset<T, KategoriDeleteArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Kategori.
   * @param {KategoriUpdateArgs} args - Arguments to update one Kategori.
   * @example
   * // Update one Kategori
   * const kategori = await prisma.kategori.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends KategoriUpdateArgs>(args: Prisma.SelectSubset<T, KategoriUpdateArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Kategoris.
   * @param {KategoriDeleteManyArgs} args - Arguments to filter Kategoris to delete.
   * @example
   * // Delete a few Kategoris
   * const { count } = await prisma.kategori.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends KategoriDeleteManyArgs>(args?: Prisma.SelectSubset<T, KategoriDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Kategoris.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Kategoris
   * const kategori = await prisma.kategori.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends KategoriUpdateManyArgs>(args: Prisma.SelectSubset<T, KategoriUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Kategoris and returns the data updated in the database.
   * @param {KategoriUpdateManyAndReturnArgs} args - Arguments to update many Kategoris.
   * @example
   * // Update many Kategoris
   * const kategori = await prisma.kategori.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Kategoris and only return the `id`
   * const kategoriWithIdOnly = await prisma.kategori.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends KategoriUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, KategoriUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Kategori.
   * @param {KategoriUpsertArgs} args - Arguments to update or create a Kategori.
   * @example
   * // Update or create a Kategori
   * const kategori = await prisma.kategori.upsert({
   *   create: {
   *     // ... data to create a Kategori
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Kategori we want to update
   *   }
   * })
   */
  upsert<T extends KategoriUpsertArgs>(args: Prisma.SelectSubset<T, KategoriUpsertArgs<ExtArgs>>): Prisma.Prisma__KategoriClient<runtime.Types.Result.GetResult<Prisma.$KategoriPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Kategoris.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriCountArgs} args - Arguments to filter Kategoris to count.
   * @example
   * // Count the number of Kategoris
   * const count = await prisma.kategori.count({
   *   where: {
   *     // ... the filter for the Kategoris we want to count
   *   }
   * })
  **/
  count<T extends KategoriCountArgs>(
    args?: Prisma.Subset<T, KategoriCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], KategoriCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Kategori.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends KategoriAggregateArgs>(args: Prisma.Subset<T, KategoriAggregateArgs>): Prisma.PrismaPromise<GetKategoriAggregateType<T>>

  /**
   * Group by Kategori.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KategoriGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends KategoriGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: KategoriGroupByArgs['orderBy'] }
      : { orderBy?: KategoriGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, KategoriGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKategoriGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Kategori model
 */
readonly fields: KategoriFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Kategori.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__KategoriClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  daftarAgenda<T extends Prisma.Kategori$daftarAgendaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Kategori$daftarAgendaArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Kategori model
 */
export interface KategoriFieldRefs {
  readonly id: Prisma.FieldRef<"Kategori", 'String'>
  readonly name: Prisma.FieldRef<"Kategori", 'String'>
  readonly dibuatTanggal: Prisma.FieldRef<"Kategori", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Kategori findUnique
 */
export type KategoriFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * Filter, which Kategori to fetch.
   */
  where: Prisma.KategoriWhereUniqueInput
}

/**
 * Kategori findUniqueOrThrow
 */
export type KategoriFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * Filter, which Kategori to fetch.
   */
  where: Prisma.KategoriWhereUniqueInput
}

/**
 * Kategori findFirst
 */
export type KategoriFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * Filter, which Kategori to fetch.
   */
  where?: Prisma.KategoriWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kategoris to fetch.
   */
  orderBy?: Prisma.KategoriOrderByWithRelationInput | Prisma.KategoriOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Kategoris.
   */
  cursor?: Prisma.KategoriWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kategoris from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kategoris.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Kategoris.
   */
  distinct?: Prisma.KategoriScalarFieldEnum | Prisma.KategoriScalarFieldEnum[]
}

/**
 * Kategori findFirstOrThrow
 */
export type KategoriFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * Filter, which Kategori to fetch.
   */
  where?: Prisma.KategoriWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kategoris to fetch.
   */
  orderBy?: Prisma.KategoriOrderByWithRelationInput | Prisma.KategoriOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Kategoris.
   */
  cursor?: Prisma.KategoriWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kategoris from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kategoris.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Kategoris.
   */
  distinct?: Prisma.KategoriScalarFieldEnum | Prisma.KategoriScalarFieldEnum[]
}

/**
 * Kategori findMany
 */
export type KategoriFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * Filter, which Kategoris to fetch.
   */
  where?: Prisma.KategoriWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kategoris to fetch.
   */
  orderBy?: Prisma.KategoriOrderByWithRelationInput | Prisma.KategoriOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Kategoris.
   */
  cursor?: Prisma.KategoriWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kategoris from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kategoris.
   */
  skip?: number
  distinct?: Prisma.KategoriScalarFieldEnum | Prisma.KategoriScalarFieldEnum[]
}

/**
 * Kategori create
 */
export type KategoriCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * The data needed to create a Kategori.
   */
  data: Prisma.XOR<Prisma.KategoriCreateInput, Prisma.KategoriUncheckedCreateInput>
}

/**
 * Kategori createMany
 */
export type KategoriCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Kategoris.
   */
  data: Prisma.KategoriCreateManyInput | Prisma.KategoriCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Kategori createManyAndReturn
 */
export type KategoriCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * The data used to create many Kategoris.
   */
  data: Prisma.KategoriCreateManyInput | Prisma.KategoriCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Kategori update
 */
export type KategoriUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * The data needed to update a Kategori.
   */
  data: Prisma.XOR<Prisma.KategoriUpdateInput, Prisma.KategoriUncheckedUpdateInput>
  /**
   * Choose, which Kategori to update.
   */
  where: Prisma.KategoriWhereUniqueInput
}

/**
 * Kategori updateMany
 */
export type KategoriUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Kategoris.
   */
  data: Prisma.XOR<Prisma.KategoriUpdateManyMutationInput, Prisma.KategoriUncheckedUpdateManyInput>
  /**
   * Filter which Kategoris to update
   */
  where?: Prisma.KategoriWhereInput
  /**
   * Limit how many Kategoris to update.
   */
  limit?: number
}

/**
 * Kategori updateManyAndReturn
 */
export type KategoriUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * The data used to update Kategoris.
   */
  data: Prisma.XOR<Prisma.KategoriUpdateManyMutationInput, Prisma.KategoriUncheckedUpdateManyInput>
  /**
   * Filter which Kategoris to update
   */
  where?: Prisma.KategoriWhereInput
  /**
   * Limit how many Kategoris to update.
   */
  limit?: number
}

/**
 * Kategori upsert
 */
export type KategoriUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * The filter to search for the Kategori to update in case it exists.
   */
  where: Prisma.KategoriWhereUniqueInput
  /**
   * In case the Kategori found by the `where` argument doesn't exist, create a new Kategori with this data.
   */
  create: Prisma.XOR<Prisma.KategoriCreateInput, Prisma.KategoriUncheckedCreateInput>
  /**
   * In case the Kategori was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.KategoriUpdateInput, Prisma.KategoriUncheckedUpdateInput>
}

/**
 * Kategori delete
 */
export type KategoriDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
  /**
   * Filter which Kategori to delete.
   */
  where: Prisma.KategoriWhereUniqueInput
}

/**
 * Kategori deleteMany
 */
export type KategoriDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Kategoris to delete
   */
  where?: Prisma.KategoriWhereInput
  /**
   * Limit how many Kategoris to delete.
   */
  limit?: number
}

/**
 * Kategori.daftarAgenda
 */
export type Kategori$daftarAgendaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  where?: Prisma.AgendaWhereInput
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  cursor?: Prisma.AgendaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AgendaScalarFieldEnum | Prisma.AgendaScalarFieldEnum[]
}

/**
 * Kategori without action
 */
export type KategoriDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kategori
   */
  select?: Prisma.KategoriSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kategori
   */
  omit?: Prisma.KategoriOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KategoriInclude<ExtArgs> | null
}
