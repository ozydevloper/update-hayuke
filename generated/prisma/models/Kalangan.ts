
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Kalangan` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Kalangan
 * 
 */
export type KalanganModel = runtime.Types.Result.DefaultSelection<Prisma.$KalanganPayload>

export type AggregateKalangan = {
  _count: KalanganCountAggregateOutputType | null
  _min: KalanganMinAggregateOutputType | null
  _max: KalanganMaxAggregateOutputType | null
}

export type KalanganMinAggregateOutputType = {
  id: string | null
  name: string | null
  dibuatTanggal: Date | null
}

export type KalanganMaxAggregateOutputType = {
  id: string | null
  name: string | null
  dibuatTanggal: Date | null
}

export type KalanganCountAggregateOutputType = {
  id: number
  name: number
  dibuatTanggal: number
  _all: number
}


export type KalanganMinAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
}

export type KalanganMaxAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
}

export type KalanganCountAggregateInputType = {
  id?: true
  name?: true
  dibuatTanggal?: true
  _all?: true
}

export type KalanganAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Kalangan to aggregate.
   */
  where?: Prisma.KalanganWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kalangans to fetch.
   */
  orderBy?: Prisma.KalanganOrderByWithRelationInput | Prisma.KalanganOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.KalanganWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kalangans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kalangans.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Kalangans
  **/
  _count?: true | KalanganCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: KalanganMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: KalanganMaxAggregateInputType
}

export type GetKalanganAggregateType<T extends KalanganAggregateArgs> = {
      [P in keyof T & keyof AggregateKalangan]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateKalangan[P]>
    : Prisma.GetScalarType<T[P], AggregateKalangan[P]>
}




export type KalanganGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.KalanganWhereInput
  orderBy?: Prisma.KalanganOrderByWithAggregationInput | Prisma.KalanganOrderByWithAggregationInput[]
  by: Prisma.KalanganScalarFieldEnum[] | Prisma.KalanganScalarFieldEnum
  having?: Prisma.KalanganScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: KalanganCountAggregateInputType | true
  _min?: KalanganMinAggregateInputType
  _max?: KalanganMaxAggregateInputType
}

export type KalanganGroupByOutputType = {
  id: string
  name: string
  dibuatTanggal: Date
  _count: KalanganCountAggregateOutputType | null
  _min: KalanganMinAggregateOutputType | null
  _max: KalanganMaxAggregateOutputType | null
}

type GetKalanganGroupByPayload<T extends KalanganGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<KalanganGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof KalanganGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], KalanganGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], KalanganGroupByOutputType[P]>
      }
    >
  >



export type KalanganWhereInput = {
  AND?: Prisma.KalanganWhereInput | Prisma.KalanganWhereInput[]
  OR?: Prisma.KalanganWhereInput[]
  NOT?: Prisma.KalanganWhereInput | Prisma.KalanganWhereInput[]
  id?: Prisma.StringFilter<"Kalangan"> | string
  name?: Prisma.StringFilter<"Kalangan"> | string
  dibuatTanggal?: Prisma.DateTimeFilter<"Kalangan"> | Date | string
  daftarAgenda?: Prisma.AgendaListRelationFilter
}

export type KalanganOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  daftarAgenda?: Prisma.AgendaOrderByRelationAggregateInput
}

export type KalanganWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  name?: string
  AND?: Prisma.KalanganWhereInput | Prisma.KalanganWhereInput[]
  OR?: Prisma.KalanganWhereInput[]
  NOT?: Prisma.KalanganWhereInput | Prisma.KalanganWhereInput[]
  dibuatTanggal?: Prisma.DateTimeFilter<"Kalangan"> | Date | string
  daftarAgenda?: Prisma.AgendaListRelationFilter
}, "id" | "name">

export type KalanganOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
  _count?: Prisma.KalanganCountOrderByAggregateInput
  _max?: Prisma.KalanganMaxOrderByAggregateInput
  _min?: Prisma.KalanganMinOrderByAggregateInput
}

export type KalanganScalarWhereWithAggregatesInput = {
  AND?: Prisma.KalanganScalarWhereWithAggregatesInput | Prisma.KalanganScalarWhereWithAggregatesInput[]
  OR?: Prisma.KalanganScalarWhereWithAggregatesInput[]
  NOT?: Prisma.KalanganScalarWhereWithAggregatesInput | Prisma.KalanganScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Kalangan"> | string
  name?: Prisma.StringWithAggregatesFilter<"Kalangan"> | string
  dibuatTanggal?: Prisma.DateTimeWithAggregatesFilter<"Kalangan"> | Date | string
}

export type KalanganCreateInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
  daftarAgenda?: Prisma.AgendaCreateNestedManyWithoutKalanganInput
}

export type KalanganUncheckedCreateInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
  daftarAgenda?: Prisma.AgendaUncheckedCreateNestedManyWithoutKalanganInput
}

export type KalanganUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  daftarAgenda?: Prisma.AgendaUpdateManyWithoutKalanganNestedInput
}

export type KalanganUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  daftarAgenda?: Prisma.AgendaUncheckedUpdateManyWithoutKalanganNestedInput
}

export type KalanganCreateManyInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type KalanganUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type KalanganUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type KalanganNullableScalarRelationFilter = {
  is?: Prisma.KalanganWhereInput | null
  isNot?: Prisma.KalanganWhereInput | null
}

export type KalanganCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type KalanganMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type KalanganMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  dibuatTanggal?: Prisma.SortOrder
}

export type KalanganCreateNestedOneWithoutDaftarAgendaInput = {
  create?: Prisma.XOR<Prisma.KalanganCreateWithoutDaftarAgendaInput, Prisma.KalanganUncheckedCreateWithoutDaftarAgendaInput>
  connectOrCreate?: Prisma.KalanganCreateOrConnectWithoutDaftarAgendaInput
  connect?: Prisma.KalanganWhereUniqueInput
}

export type KalanganUpdateOneWithoutDaftarAgendaNestedInput = {
  create?: Prisma.XOR<Prisma.KalanganCreateWithoutDaftarAgendaInput, Prisma.KalanganUncheckedCreateWithoutDaftarAgendaInput>
  connectOrCreate?: Prisma.KalanganCreateOrConnectWithoutDaftarAgendaInput
  upsert?: Prisma.KalanganUpsertWithoutDaftarAgendaInput
  disconnect?: Prisma.KalanganWhereInput | boolean
  delete?: Prisma.KalanganWhereInput | boolean
  connect?: Prisma.KalanganWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.KalanganUpdateToOneWithWhereWithoutDaftarAgendaInput, Prisma.KalanganUpdateWithoutDaftarAgendaInput>, Prisma.KalanganUncheckedUpdateWithoutDaftarAgendaInput>
}

export type KalanganCreateWithoutDaftarAgendaInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type KalanganUncheckedCreateWithoutDaftarAgendaInput = {
  id?: string
  name: string
  dibuatTanggal?: Date | string
}

export type KalanganCreateOrConnectWithoutDaftarAgendaInput = {
  where: Prisma.KalanganWhereUniqueInput
  create: Prisma.XOR<Prisma.KalanganCreateWithoutDaftarAgendaInput, Prisma.KalanganUncheckedCreateWithoutDaftarAgendaInput>
}

export type KalanganUpsertWithoutDaftarAgendaInput = {
  update: Prisma.XOR<Prisma.KalanganUpdateWithoutDaftarAgendaInput, Prisma.KalanganUncheckedUpdateWithoutDaftarAgendaInput>
  create: Prisma.XOR<Prisma.KalanganCreateWithoutDaftarAgendaInput, Prisma.KalanganUncheckedCreateWithoutDaftarAgendaInput>
  where?: Prisma.KalanganWhereInput
}

export type KalanganUpdateToOneWithWhereWithoutDaftarAgendaInput = {
  where?: Prisma.KalanganWhereInput
  data: Prisma.XOR<Prisma.KalanganUpdateWithoutDaftarAgendaInput, Prisma.KalanganUncheckedUpdateWithoutDaftarAgendaInput>
}

export type KalanganUpdateWithoutDaftarAgendaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type KalanganUncheckedUpdateWithoutDaftarAgendaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  dibuatTanggal?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type KalanganCountOutputType
 */

export type KalanganCountOutputType = {
  daftarAgenda: number
}

export type KalanganCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  daftarAgenda?: boolean | KalanganCountOutputTypeCountDaftarAgendaArgs
}

/**
 * KalanganCountOutputType without action
 */
export type KalanganCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the KalanganCountOutputType
   */
  select?: Prisma.KalanganCountOutputTypeSelect<ExtArgs> | null
}

/**
 * KalanganCountOutputType without action
 */
export type KalanganCountOutputTypeCountDaftarAgendaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AgendaWhereInput
}


export type KalanganSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
  daftarAgenda?: boolean | Prisma.Kalangan$daftarAgendaArgs<ExtArgs>
  _count?: boolean | Prisma.KalanganCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["kalangan"]>

export type KalanganSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}, ExtArgs["result"]["kalangan"]>

export type KalanganSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}, ExtArgs["result"]["kalangan"]>

export type KalanganSelectScalar = {
  id?: boolean
  name?: boolean
  dibuatTanggal?: boolean
}

export type KalanganOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "dibuatTanggal", ExtArgs["result"]["kalangan"]>
export type KalanganInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  daftarAgenda?: boolean | Prisma.Kalangan$daftarAgendaArgs<ExtArgs>
  _count?: boolean | Prisma.KalanganCountOutputTypeDefaultArgs<ExtArgs>
}
export type KalanganIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type KalanganIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $KalanganPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Kalangan"
  objects: {
    daftarAgenda: Prisma.$AgendaPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    dibuatTanggal: Date
  }, ExtArgs["result"]["kalangan"]>
  composites: {}
}

export type KalanganGetPayload<S extends boolean | null | undefined | KalanganDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$KalanganPayload, S>

export type KalanganCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<KalanganFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: KalanganCountAggregateInputType | true
  }

export interface KalanganDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kalangan'], meta: { name: 'Kalangan' } }
  /**
   * Find zero or one Kalangan that matches the filter.
   * @param {KalanganFindUniqueArgs} args - Arguments to find a Kalangan
   * @example
   * // Get one Kalangan
   * const kalangan = await prisma.kalangan.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends KalanganFindUniqueArgs>(args: Prisma.SelectSubset<T, KalanganFindUniqueArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Kalangan that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {KalanganFindUniqueOrThrowArgs} args - Arguments to find a Kalangan
   * @example
   * // Get one Kalangan
   * const kalangan = await prisma.kalangan.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends KalanganFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, KalanganFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Kalangan that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganFindFirstArgs} args - Arguments to find a Kalangan
   * @example
   * // Get one Kalangan
   * const kalangan = await prisma.kalangan.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends KalanganFindFirstArgs>(args?: Prisma.SelectSubset<T, KalanganFindFirstArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Kalangan that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganFindFirstOrThrowArgs} args - Arguments to find a Kalangan
   * @example
   * // Get one Kalangan
   * const kalangan = await prisma.kalangan.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends KalanganFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, KalanganFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Kalangans that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Kalangans
   * const kalangans = await prisma.kalangan.findMany()
   * 
   * // Get first 10 Kalangans
   * const kalangans = await prisma.kalangan.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const kalanganWithIdOnly = await prisma.kalangan.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends KalanganFindManyArgs>(args?: Prisma.SelectSubset<T, KalanganFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Kalangan.
   * @param {KalanganCreateArgs} args - Arguments to create a Kalangan.
   * @example
   * // Create one Kalangan
   * const Kalangan = await prisma.kalangan.create({
   *   data: {
   *     // ... data to create a Kalangan
   *   }
   * })
   * 
   */
  create<T extends KalanganCreateArgs>(args: Prisma.SelectSubset<T, KalanganCreateArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Kalangans.
   * @param {KalanganCreateManyArgs} args - Arguments to create many Kalangans.
   * @example
   * // Create many Kalangans
   * const kalangan = await prisma.kalangan.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends KalanganCreateManyArgs>(args?: Prisma.SelectSubset<T, KalanganCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Kalangans and returns the data saved in the database.
   * @param {KalanganCreateManyAndReturnArgs} args - Arguments to create many Kalangans.
   * @example
   * // Create many Kalangans
   * const kalangan = await prisma.kalangan.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Kalangans and only return the `id`
   * const kalanganWithIdOnly = await prisma.kalangan.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends KalanganCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, KalanganCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Kalangan.
   * @param {KalanganDeleteArgs} args - Arguments to delete one Kalangan.
   * @example
   * // Delete one Kalangan
   * const Kalangan = await prisma.kalangan.delete({
   *   where: {
   *     // ... filter to delete one Kalangan
   *   }
   * })
   * 
   */
  delete<T extends KalanganDeleteArgs>(args: Prisma.SelectSubset<T, KalanganDeleteArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Kalangan.
   * @param {KalanganUpdateArgs} args - Arguments to update one Kalangan.
   * @example
   * // Update one Kalangan
   * const kalangan = await prisma.kalangan.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends KalanganUpdateArgs>(args: Prisma.SelectSubset<T, KalanganUpdateArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Kalangans.
   * @param {KalanganDeleteManyArgs} args - Arguments to filter Kalangans to delete.
   * @example
   * // Delete a few Kalangans
   * const { count } = await prisma.kalangan.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends KalanganDeleteManyArgs>(args?: Prisma.SelectSubset<T, KalanganDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Kalangans.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Kalangans
   * const kalangan = await prisma.kalangan.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends KalanganUpdateManyArgs>(args: Prisma.SelectSubset<T, KalanganUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Kalangans and returns the data updated in the database.
   * @param {KalanganUpdateManyAndReturnArgs} args - Arguments to update many Kalangans.
   * @example
   * // Update many Kalangans
   * const kalangan = await prisma.kalangan.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Kalangans and only return the `id`
   * const kalanganWithIdOnly = await prisma.kalangan.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends KalanganUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, KalanganUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Kalangan.
   * @param {KalanganUpsertArgs} args - Arguments to update or create a Kalangan.
   * @example
   * // Update or create a Kalangan
   * const kalangan = await prisma.kalangan.upsert({
   *   create: {
   *     // ... data to create a Kalangan
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Kalangan we want to update
   *   }
   * })
   */
  upsert<T extends KalanganUpsertArgs>(args: Prisma.SelectSubset<T, KalanganUpsertArgs<ExtArgs>>): Prisma.Prisma__KalanganClient<runtime.Types.Result.GetResult<Prisma.$KalanganPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Kalangans.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganCountArgs} args - Arguments to filter Kalangans to count.
   * @example
   * // Count the number of Kalangans
   * const count = await prisma.kalangan.count({
   *   where: {
   *     // ... the filter for the Kalangans we want to count
   *   }
   * })
  **/
  count<T extends KalanganCountArgs>(
    args?: Prisma.Subset<T, KalanganCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], KalanganCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Kalangan.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends KalanganAggregateArgs>(args: Prisma.Subset<T, KalanganAggregateArgs>): Prisma.PrismaPromise<GetKalanganAggregateType<T>>

  /**
   * Group by Kalangan.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {KalanganGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends KalanganGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: KalanganGroupByArgs['orderBy'] }
      : { orderBy?: KalanganGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, KalanganGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKalanganGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Kalangan model
 */
readonly fields: KalanganFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Kalangan.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__KalanganClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  daftarAgenda<T extends Prisma.Kalangan$daftarAgendaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Kalangan$daftarAgendaArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Kalangan model
 */
export interface KalanganFieldRefs {
  readonly id: Prisma.FieldRef<"Kalangan", 'String'>
  readonly name: Prisma.FieldRef<"Kalangan", 'String'>
  readonly dibuatTanggal: Prisma.FieldRef<"Kalangan", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Kalangan findUnique
 */
export type KalanganFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * Filter, which Kalangan to fetch.
   */
  where: Prisma.KalanganWhereUniqueInput
}

/**
 * Kalangan findUniqueOrThrow
 */
export type KalanganFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * Filter, which Kalangan to fetch.
   */
  where: Prisma.KalanganWhereUniqueInput
}

/**
 * Kalangan findFirst
 */
export type KalanganFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * Filter, which Kalangan to fetch.
   */
  where?: Prisma.KalanganWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kalangans to fetch.
   */
  orderBy?: Prisma.KalanganOrderByWithRelationInput | Prisma.KalanganOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Kalangans.
   */
  cursor?: Prisma.KalanganWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kalangans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kalangans.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Kalangans.
   */
  distinct?: Prisma.KalanganScalarFieldEnum | Prisma.KalanganScalarFieldEnum[]
}

/**
 * Kalangan findFirstOrThrow
 */
export type KalanganFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * Filter, which Kalangan to fetch.
   */
  where?: Prisma.KalanganWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kalangans to fetch.
   */
  orderBy?: Prisma.KalanganOrderByWithRelationInput | Prisma.KalanganOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Kalangans.
   */
  cursor?: Prisma.KalanganWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kalangans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kalangans.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Kalangans.
   */
  distinct?: Prisma.KalanganScalarFieldEnum | Prisma.KalanganScalarFieldEnum[]
}

/**
 * Kalangan findMany
 */
export type KalanganFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * Filter, which Kalangans to fetch.
   */
  where?: Prisma.KalanganWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Kalangans to fetch.
   */
  orderBy?: Prisma.KalanganOrderByWithRelationInput | Prisma.KalanganOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Kalangans.
   */
  cursor?: Prisma.KalanganWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Kalangans from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Kalangans.
   */
  skip?: number
  distinct?: Prisma.KalanganScalarFieldEnum | Prisma.KalanganScalarFieldEnum[]
}

/**
 * Kalangan create
 */
export type KalanganCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * The data needed to create a Kalangan.
   */
  data: Prisma.XOR<Prisma.KalanganCreateInput, Prisma.KalanganUncheckedCreateInput>
}

/**
 * Kalangan createMany
 */
export type KalanganCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Kalangans.
   */
  data: Prisma.KalanganCreateManyInput | Prisma.KalanganCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Kalangan createManyAndReturn
 */
export type KalanganCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * The data used to create many Kalangans.
   */
  data: Prisma.KalanganCreateManyInput | Prisma.KalanganCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Kalangan update
 */
export type KalanganUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * The data needed to update a Kalangan.
   */
  data: Prisma.XOR<Prisma.KalanganUpdateInput, Prisma.KalanganUncheckedUpdateInput>
  /**
   * Choose, which Kalangan to update.
   */
  where: Prisma.KalanganWhereUniqueInput
}

/**
 * Kalangan updateMany
 */
export type KalanganUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Kalangans.
   */
  data: Prisma.XOR<Prisma.KalanganUpdateManyMutationInput, Prisma.KalanganUncheckedUpdateManyInput>
  /**
   * Filter which Kalangans to update
   */
  where?: Prisma.KalanganWhereInput
  /**
   * Limit how many Kalangans to update.
   */
  limit?: number
}

/**
 * Kalangan updateManyAndReturn
 */
export type KalanganUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * The data used to update Kalangans.
   */
  data: Prisma.XOR<Prisma.KalanganUpdateManyMutationInput, Prisma.KalanganUncheckedUpdateManyInput>
  /**
   * Filter which Kalangans to update
   */
  where?: Prisma.KalanganWhereInput
  /**
   * Limit how many Kalangans to update.
   */
  limit?: number
}

/**
 * Kalangan upsert
 */
export type KalanganUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * The filter to search for the Kalangan to update in case it exists.
   */
  where: Prisma.KalanganWhereUniqueInput
  /**
   * In case the Kalangan found by the `where` argument doesn't exist, create a new Kalangan with this data.
   */
  create: Prisma.XOR<Prisma.KalanganCreateInput, Prisma.KalanganUncheckedCreateInput>
  /**
   * In case the Kalangan was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.KalanganUpdateInput, Prisma.KalanganUncheckedUpdateInput>
}

/**
 * Kalangan delete
 */
export type KalanganDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
  /**
   * Filter which Kalangan to delete.
   */
  where: Prisma.KalanganWhereUniqueInput
}

/**
 * Kalangan deleteMany
 */
export type KalanganDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Kalangans to delete
   */
  where?: Prisma.KalanganWhereInput
  /**
   * Limit how many Kalangans to delete.
   */
  limit?: number
}

/**
 * Kalangan.daftarAgenda
 */
export type Kalangan$daftarAgendaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Agenda
   */
  select?: Prisma.AgendaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Agenda
   */
  omit?: Prisma.AgendaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgendaInclude<ExtArgs> | null
  where?: Prisma.AgendaWhereInput
  orderBy?: Prisma.AgendaOrderByWithRelationInput | Prisma.AgendaOrderByWithRelationInput[]
  cursor?: Prisma.AgendaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AgendaScalarFieldEnum | Prisma.AgendaScalarFieldEnum[]
}

/**
 * Kalangan without action
 */
export type KalanganDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Kalangan
   */
  select?: Prisma.KalanganSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Kalangan
   */
  omit?: Prisma.KalanganOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KalanganInclude<ExtArgs> | null
}
